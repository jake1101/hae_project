<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="todo-mgt">

	<select id="findListTodoGroup" resultType="map">
	/* todo-mgt.findListTodoGroup : TO-DO 그룹 목록 조회 */
	SELECT GRP.USR_CLS
	     , GRP.GRP_CD
	     , GRP.GRP_NM
	     , GRP.CMN_YN
	  FROM ESATDGRP GRP
	 WHERE GRP.SYS_ID  = #{g.tenant}
	   AND GRP.USR_CLS = #{p.usr_cls}
	 ORDER BY GRP.GRP_CD
	</select>
	
	<insert id="insertTodoGroup">
	/* todo-mgt.insertTodoGroup : TO-DO 그룹 신규 추가 */
	INSERT INTO ESATDGRP
	    (
	        SYS_ID
	      , USR_CLS
	      , GRP_CD
	      , GRP_NM
	      , CMN_YN 
	      , STS
	      , REG_ID
	      , REG_DT
	      , MOD_ID
	      , MOD_DT
	    )
	VALUES
	    (
	        #{g.tenant}
	      , #{p.usr_cls}
	      , #{p.grp_cd}
	      , #{p.grp_nm}
	      , #{p.cmn_yn}
	      , 'C'
	      , #{g.username}
	      , #{g.now}
	      , #{g.username}
	      , #{g.now}
	    )
	</insert>
	
	<update id="updateTodoGroup">
	/* todo-mgt.updateTodoGroup : TO-DO 그룹 수정 */
	UPDATE ESATDGRP
	   SET GRP_NM = #{p.grp_nm}
	     , CMN_YN = #{p.cmn_yn}
	     , STS    = 'U'
	     , MOD_ID = #{g.username}
	     , MOD_DT = #{g.now}
	 WHERE SYS_ID  = #{g.tenant}
	   AND USR_CLS = #{p.usr_cls}
	   AND GRP_CD  = #{p.grp_cd}
	</update>
	
	<delete id="deleteTodoGroup">
	/* todo-mgt.deleteTodoGroup : TO-DO 그룹 삭제 */
	DELETE
	  FROM ESATDGRP
	 WHERE SYS_ID  = #{g.tenant}
	   AND USR_CLS = #{p.usr_cls}
	   AND GRP_CD  = #{p.grp_cd}
	</delete>
	
	<select id="findListTodoFactor" resultType="map">
	/* todo-mgt.findListTodoFactor : TO-DO 항목 목록 조회 */
	SELECT FT.GRP_CD
	     , GP.GRP_NM
	     , GP.CMN_YN
	     , FT.USR_CLS
	     , FT.FACT_ID
	     , FT.FACT_NM
	     , FT.FACT_EN_NM
	     , FT.MENU_CD
	     , FT.FACT_DESC
	     , FT.CALL_PARAM
	     , FT.QRY_ID
	     , FT.SORT_ORD
	     , FT.USE_YN
	  FROM ESATDFCT FT
	 INNER JOIN ESATDGRP GP
	    ON GP.SYS_ID  = FT.SYS_ID
	   AND GP.USR_CLS = FT.USR_CLS
	   AND GP.GRP_CD  = FT.GRP_CD
	 WHERE FT.SYS_ID  = #{g.tenant}
	   AND FT.USR_CLS = #{p.usr_cls}
	 <if test="p.grp_cd != null and p.grp_cd != ''">
	   AND FT.GRP_CD  = #{p.grp_cd}
	 </if>
	 <if test="p.fact_nm != null and p.fact_nm != ''">
	   <bind name="factNmPattern" value="'%'+p.fact_nm+'%'"/>
	   AND FT.FACT_NM LIKE #{factNmPattern}
	 </if>
	 <if test="p.menu_cd != null and p.menu_cd != ''">
	   <bind name="menuCdPattern" value="'%'+p.menu_cd+'%'"/>
	   AND FT.MENU_CD LIKE #{menuCdPattern}
	 </if>
	 <if test="p.usr_id != null and p.usr_id != ''">
	   AND EXISTS ( SELECT USR_ID
	                  FROM ESATDUSR
	                 WHERE SYS_ID  = FT.SYS_ID
	                   AND FACT_ID = FT.FACT_ID
	                   AND USR_ID  = #{p.usr_id}
	              )
	 </if>
	 ORDER BY GP.GRP_CD, FT.SORT_ORD
	</select>
	
	<insert id="insertTodoFactor">
	/* todo-mgt.insertTodoFactor : TO-DO 항목 신규 추가 */
	INSERT INTO ESATDFCT
	    (
	        SYS_ID
	      , FACT_ID
	      , USR_CLS
	      , GRP_CD
	      , FACT_NM
	      , FACT_EN_NM
	      , MENU_CD
	      , FACT_DESC
	      , CALL_PARAM
	      , QRY_ID
	      , SORT_ORD
	      , USE_YN
	      , STS
	      , REG_ID
	      , REG_DT
	      , MOD_ID
	      , MOD_DT
	    )
	VALUES
	    (
	        #{g.tenant}
	      , #{p.fact_id}
	      , #{p.usr_cls}
	      , #{p.grp_cd}
	      , #{p.fact_nm}
	      , #{p.fact_en_nm}
	      , #{p.menu_cd}
	      , #{p.fact_desc}
	      , #{p.call_param}
	      , #{p.qry_id}
	      , #{p.sort_ord}
	      , #{p.use_yn}
	      , 'C'
	      , #{g.username}
	      , #{g.now}
	      , #{g.username}
	      , #{g.now}
	    )
	</insert>
	
	<update id="updateTodoFactor">
	/* todo-mgt.updateTodoFactor : TO-DO 항목 수정 */
	UPDATE ESATDFCT
	   SET GRP_CD     = #{p.grp_cd}
	     , FACT_NM    = #{p.fact_nm}
	     , FACT_EN_NM = #{p.fact_en_nm}
	     , MENU_CD    = #{p.menu_cd}
	     , FACT_DESC  = #{p.fact_desc}
	     , CALL_PARAM = #{p.call_param}
	     , QRY_ID     = #{p.qry_id}
	     , SORT_ORD   = #{p.sort_ord}
	     , USE_YN     = #{p.use_yn}
	     , STS        = 'U'
	     , MOD_ID     = #{g.username}
	     , MOD_DT     = #{g.now}
	 WHERE SYS_ID  = #{g.tenant}
	   AND FACT_ID = #{p.fact_id}
	</update>
	
	<delete id="deleteTodoFactor">
	/* todo-mgt.deleteTodoFactor : TO-DO 항목 삭제 */
	DELETE
	  FROM ESATDFCT
	 WHERE SYS_ID = #{g.tenant}
	 <choose>
	   <when test="p.fact_id != null and p.fact_id != ''">
	   AND FACT_ID = #{p.fact_id}
	   </when>
	   <otherwise>
	   AND USR_CLS = #{p.usr_cls}
	   AND GRP_CD  = #{p.grp_cd}
	   </otherwise>
	 </choose>
	</delete>
	
	<select id="findListTodoUser" resultType="map">
	/* todo-mgt.findListTodoUser : TO-DO 항목 별 사용자 목록 조회 */
	SELECT TUSR.FACT_ID
	     , TUSR.USR_ID
	     , USR.USR_NM
	     <choose>
	       <when test='p.usr_cls == "B"'>
	     , USR.DEPT_CD
	     , DEPT.DEPT_NM
	       </when>
	       <otherwise>
	     , VDGL.VD_CD
	     , VDGL.ERP_VD_CD
	     , VDGL.VD_NM
	       </otherwise>
	     </choose>
	  FROM ESATDUSR TUSR
	 INNER JOIN ESAUSER USR
	    ON USR.SYS_ID = TUSR.SYS_ID
	   AND USR.USR_ID = TUSR.USR_ID
	 <choose>
	  <when test='p.usr_cls == "B"'>
	  LEFT OUTER JOIN ESAOGDP DEPT
	    ON DEPT.SYS_ID     = USR.SYS_ID
	   AND DEPT.ORG_TYP_CD = 'COMPANY'
	   AND DEPT.ORG_CD     = USR.COMP_CD
	   AND DEPT.DEPT_CD    = USR.DEPT_CD
	  </when>
	  <otherwise>
	 INNER JOIN ESMVDGL VDGL
	    ON VDGL.SYS_ID = USR.SYS_ID
	   AND VDGL.VD_CD  = USR.VD_CD
	  </otherwise>
	 </choose>
	 WHERE TUSR.SYS_ID  = #{g.tenant}
	   AND TUSR.FACT_ID = #{p.fact_id}
	</select>
	
	<insert id="insertTodoUser">
	/* todo-mgt.insertTodoUser : TO-DO 항목 별 사용자 신규 추가 */
	INSERT INTO ESATDUSR
	    (
	        SYS_ID
	      , FACT_ID
	      , USR_ID
	      , REG_ID
	      , REG_DT
	      , MOD_ID
	      , MOD_DT
	    )
	VALUES
	    (
	        #{g.tenant}
	      , #{p.fact_id}
	      , #{p.usr_id}
	      , #{g.username}
	      , #{g.now}
	      , #{g.username}
	      , #{g.now}
	    )
	</insert>
	
	<delete id="deleteTodoUser">
	/* todo-mgt.deleteTodoUser : TO-DO 항목 별 사용자 삭제 */
	DELETE
	  FROM ESATDUSR
	 WHERE SYS_ID = #{g.tenant}
	 <choose>
	   <when test="p.fact_id != null and p.fact_id != ''">
	   AND FACT_ID = #{p.fact_id}
	     <if test="p.usr_id != null and p.usr_id != ''">
	   AND USR_ID  = #{p.usr_id}
	     </if>
	   </when>
	   <otherwise>
	   AND FACT_ID IN ( SELECT FACT_ID
	                      FROM ESATDFCT
	                     WHERE SYS_ID  = #{g.tenant}
	                       AND USR_CLS = #{p.usr_cls}
	                       AND GRP_CD  = #{p.grp_cd}
	                  )
	   </otherwise>
	 </choose>
	</delete>
	
	<select id="findListTodoFactorByCurrentUser" resultType="map">
	/* todo-mgt.findListTodoFactorByCurrentUser : 현재 사용자의 TO-DO 항목 목록 조회 */
	SELECT FT.GRP_CD
	     , GP.GRP_NM
	     , GP.CMN_YN
	     , FT.USR_CLS
	     , FT.FACT_ID
	     , CASE WHEN #{g.locale} = 'ko_KR'
	                 THEN FT.FACT_NM
	            ELSE FT.FACT_EN_NM
	       END  AS FACT_NM
	     , CASE WHEN US.USR_ID IS NULL
	                 THEN 'N'
	            ELSE 'Y'
	       END  AS SHOW_YN
	  FROM ESATDFCT FT
	 INNER JOIN ESATDGRP GP
	    ON GP.SYS_ID  = FT.SYS_ID
	   AND GP.USR_CLS = FT.USR_CLS
	   AND GP.GRP_CD  = FT.GRP_CD
	  LEFT OUTER JOIN ESATDUSR US
	    ON US.SYS_ID  = FT.SYS_ID
	   AND US.FACT_ID = FT.FACT_ID
	   AND US.USR_ID  = #{g.username}
	 WHERE FT.SYS_ID  = #{g.tenant}
	   AND FT.USR_CLS = #{g.usr_cls}
	 <if test="p.grp_cd != null and p.grp_cd != ''">
	   AND FT.GRP_CD  = #{p.grp_cd}
	 </if>
	   AND FT.USE_YN  = 'Y'
	 ORDER BY GP.GRP_CD, FT.SORT_ORD
	</select>
	
	<update id="insertTodoUserByCurrentUser">
	/* todo-mgt.insertTodoUserByCurrentUser : TO-DO 항목 별 사용자에 현재 사용자 신규 추가 */
	MERGE INTO ESATDUSR A
	USING ( SELECT FCT.SYS_ID       AS SYS_ID
	             , FCT.FACT_ID      AS FACT_ID
	             , #{g.username}    AS USR_ID
	             , #{g.username}    AS REG_ID
	             , #{g.now}         AS REG_DT
	             , #{g.username}    AS MOD_ID
	             , #{g.now}         AS MOD_DT
	          FROM ESATDFCT FCT
	         WHERE FCT.SYS_ID  = #{g.tenant}
	         <choose>
	           <when test="p.fact_ids != null and p.fact_ids.size() > 0">
	           AND FCT.FACT_ID IN
	               <foreach collection="p.fact_ids" item="fact_id" open="(" separator="," close=")">
	                   #{fact_id}
	               </foreach>
	           </when>
	           <otherwise>
	           AND FCT.FACT_ID = #{p.fact_id}
	           </otherwise>
	         </choose>
	           AND FCT.USE_YN  = 'Y'
	      ) B
	   ON ( A.SYS_ID  = B.SYS_ID
	    AND A.FACT_ID = B.FACT_ID
	    AND A.USR_ID  = B.USR_ID 
	      )
	WHEN NOT MATCHED THEN
	    INSERT (
	        A.SYS_ID
	      , A.FACT_ID
	      , A.USR_ID
	      , A.REG_ID
	      , A.REG_DT
	      , A.MOD_ID
	      , A.MOD_DT
	    )
	    VALUES (
	        B.SYS_ID
	      , B.FACT_ID
	      , B.USR_ID
	      , B.REG_ID
	      , B.REG_DT
	      , B.MOD_ID
	      , B.MOD_DT
	    )
	</update>
	
	<delete id="deleteTodoUserByCurrentUser">
	/* todo-mgt.deleteTodoUserByCurrentUser : TO-DO 항목 별 사용자에 현재 사용자 삭제 */
	DELETE
	  FROM ESATDUSR
	 WHERE SYS_ID = #{g.tenant}
	 <choose>
	   <when test="p.fact_ids != null and p.fact_ids.size() > 0">
	   AND FACT_ID IN
	       <foreach collection="p.fact_ids" item="fact_id" open="(" separator="," close=")">
	           #{fact_id}
	       </foreach>
	   </when>
	   <otherwise>
	   AND FACT_ID = #{p.fact_id}
	   </otherwise>
	 </choose>
	   AND USR_ID  = #{g.username}
	</delete>
</mapper>