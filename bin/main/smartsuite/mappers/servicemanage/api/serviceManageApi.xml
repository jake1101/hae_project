<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="serviceManageApi">
	<select id="regSafetyServiceGroupList" parameterType="map" resultType="map">
		/* serviceManageApi.regSafetyServiceGroupList: 서비스 그룹 리스트 조회 */	
		SELECT	SVC_GRP_ID
				,SVC_GRP_NM  
		FROM CORNERS.SVC_GRP
    </select>
    
	<select id="findRegSafetyServiceList" parameterType="map" resultType="map">
		/* serviceManageApi.findRegSafetyServiceList: 등록 서비스 리스트 조회 */
		select
		(ROW_NUMBER() OVER()) AS ROWNUM,
		tb3.svc_grp_nm,
		tb2.svc_ctl_nm,
		tb1.stt_cd
		from
		corners.svc_req tb1
		, corners.svc_ctl tb2
		, corners.svc_grp tb3
		<where>
			and tb1.svc_ctl_id = tb2.svc_ctl_id
			and tb2.svc_grp_id = tb3.svc_grp_id
	
			<if test="p.svc_grp_id != null and p.svc_grp_id != ''">
				and tb3.svc_grp_id = #{p.svc_grp_id}
			</if>
	
			<if test="p.svc_ctl_nm != null">
				<!-- bind name="svcCtlNmPattern" value="'%' + p.svc_ctl_nm + '%'" /-->
				and tb2.svc_ctl_nm like '%' || #{p.svc_ctl_nm} || '%'
			</if>
		</where>
    </select>
    
    
    <!-- 사용여부(SVC_CTL.SVC_USE_YN)을 수정한다. -->
	<update id="updateServerUseYn">
		/* updateServerUseYn */
		UPDATE SVC_CTL 
		SET SVC_USE_YN = #{p.svc_use_yn}
		WHERE SVC_CTL_ID = #{p.svc_ctl_id}
	</update>
    
    <select id="findListUserByLevel" resultType="map">
    /* user.findListUserByLevel: 내부 사용자 목록 조회 */	
           -- 운영사 관리자
           SELECT DISTINCT A.COMPANY_ID
                 , A.SITE_ID
                 , A.USR_ID                         /* 사용자아이디 */
                 , A.USR_NM                         /* 사용자명 */
                 , A.USE_YN                         /* 사용여부 */
                 , A.DEPT_CD                        /* 부서코드 */
                 , A.POS_CD                         /* 직위코드 */
                 , A.JOB_CD
                 , A.EMAIL
                 , A.PHONE_NO
                 , A.MOBILE_NO
                 , B.NAME 			AS COMP_NM
           FROM (
			<if test='p.access_level == "company"'>
                  -- 운영사 관리자의 운영사로 계정 조회
                  SELECT *
                    FROM ESAUSER
                   WHERE COMPANY_ID = #{p.user_company_id}
               UNION ALL
            </if>
                  -- 로그인한 계정의 현장권한을 포함한 계정 조회
                  SELECT *
                    FROM ESAUSER
                   WHERE SITE_IDS <![CDATA[&&]]> ( SELECT SITE_IDS
                                         FROM ESAUSER
                                        WHERE USR_ID = #{g.username} ) -- Compare two arrays for containment.
                ) A
       LEFT JOIN COMPANY B
              ON A.COMPANY_ID = B.ID
           WHERE A.SYS_ID = #{g.tenant}
             AND A.STS != 'D'
             AND A.USR_CLS = 'B'
		<if test="p.company_id != null">
			<choose>
				<when test='p.company_id == 0'>
				AND A.COMPANY_ID IS NULL
				</when>
				<otherwise>
				AND A.COMPANY_ID = #{p.company_id}
				</otherwise>
			</choose>
		</if>
		<choose>
			<when test='p.access_level == "company"'>
			 AND A.ACCESS_LEVEL != 'system' -- 운영사 관리자(플랫폼관리자 제외)
			</when>
			<otherwise>
			 AND A.ACCESS_LEVEL NOT IN ('system', 'company') -- 현장 관리자(플랫폼,운영사관리자 제외)
			</otherwise>
		</choose>
		<if test="p.usr_nm != null and p.usr_nm != ''">
			<bind name="usernamePattern" value="'%' + p.usr_nm + '%'" />
			 AND UPPER(A.USR_NM) LIKE UPPER(#{usernamePattern})
		</if>
		<if test="p.usr_id != null and p.usr_id != ''">
			<bind name="userIdPattern" value="'%' + p.usr_id + '%'" />
			 AND UPPER(A.USR_ID) LIKE UPPER(#{userIdPattern})
		</if>
		<if test="p.includeNotUse == null or p.includeNotUse == false">
		     AND A.USE_YN = 'Y'
		</if>    
        ORDER BY COMP_NM
                ,USR_NM
    </select>

</mapper>