<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="shared">
    
    <select id="getCommonCodeList" parameterType="String" resultType="map">
    /* shared.getCommonCodeList */
     SELECT T.SYS_ID
          , L.LANG_CD
          , T.GRP_CD
          , T.DTL_CD AS DATA
          , L.DTL_CD_NM
          , L.DTL_CD_NM AS LABEL
          , L.DTL_CD_USE1 AS RELATION
          , T.SORT_ORD
          , T.REM
          , T.USE_YN
          , T.MOD_DT
       FROM ESACDDT T
          , ESACDDL L
      WHERE T.SYS_ID = L.SYS_ID
        AND T.GRP_CD = L.GRP_CD
        AND T.DTL_CD = L.DTL_CD
        AND T.USE_YN = 'Y'
        AND T.STS &lt;&gt; 'D'
        AND T.SYS_ID = #{g.tenant}
        AND T.GRP_CD = #{p}
        AND L.LANG_CD = #{g.locale}
      ORDER BY T.SORT_ORD
    </select>
    
    <select id="findCommonCodeAttrCdList" resultType="map">
    	 SELECT T.SYS_ID
          , L.LANG_CD
          , T.GRP_CD
          , T.DTL_CD AS DATA
          , L.DTL_CD_NM
          , L.DTL_CD_NM AS LABEL
          , L.DTL_CD_USE1 AS RELATION
          , T.SORT_ORD
          , T.REM
          , T.USE_YN
          , T.MOD_DT
          , A.ATTR_CD
          , A.DTL_CD_ATTR_VAL
       FROM ESACDDT T
       INNER JOIN ESACDDL L
       ON  T.SYS_ID = L.SYS_ID
        AND T.GRP_CD = L.GRP_CD
        AND T.DTL_CD = L.DTL_CD
        INNER JOIN  ESADTAT A
         ON A.SYS_ID = T.SYS_ID
        AND A.GRP_CD = T.GRP_CD
        AND A.DTL_CD = T.DTL_CD
        AND A.ATTR_CD = #{p.attr_cd}
      WHERE
         T.USE_YN = 'Y'
         AND T.STS &lt;&gt; 'D'
        AND T.SYS_ID = #{g.tenant}
        AND T.GRP_CD = #{p.grp_cd}
        AND L.LANG_CD = #{g.locale}
        <if test="p.dtl_cd_attr_val != null and p.dtl_cd_attr_val != ''">
        AND A.DTL_CD_ATTR_VAL = #{p.dtl_cd_attr_val}
        </if>
      ORDER BY T.SORT_ORD
    </select>
    <select id="getModifiedCodes" resultType="map">
    /* shared.getModifiedCodes */
    SELECT T.SYS_ID
         , L.LANG_CD
         , T.GRP_CD
         , T.DTL_CD AS DATA
         , L.DTL_CD_NM
         , L.DTL_CD_NM AS LABEL
         , T.SORT_ORD
         , T.REM
         , T.USE_YN
         , T.MOD_DT
      FROM ESACDDT T
         , ESACDDL L
     WHERE T.SYS_ID = L.SYS_ID
       AND T.GRP_CD = L.GRP_CD
       AND T.DTL_CD = L.DTL_CD
       AND T.USE_YN = 'Y'
       AND T.STS    &lt;&gt; 'D'
       AND T.SYS_ID = #{g.tenant}
       AND T.MOD_DT &gt; #{p,javaType=date}
    </select>

    <select id="getAllCompanyList" resultType="map">
    /* shared.getAllCompanyList */
    SELECT ORG_CD AS COMP_CD
         , ORG_NM AS COMP_NM
      FROM ESAOGMG
     WHERE SYS_ID = #{g.tenant} 
       AND ORG_TYP_CD = 'COMPANY'
     ORDER BY ORG_CD    
    </select>    
    
    <select id="getDocInfo" parameterType="String" resultType="map">
    /* shared.getDocInfo */
    SELECT START_SEQ
         , END_SEQ
         , CURRENT_SEQ
         , EXPRESSION
         , SEQ_REFRESH_UNIT
         , LAST_GENERATED_DATE
      FROM ESACDFM
     WHERE SYS_ID = #{g.tenant}
       AND DOC_NO_CD = #{p}
       AND COMP_CD = 'C100' /* TO-DO : 세션 정보로 수정 필요 */
       FOR UPDATE
    </select>    
    
    <update id="updateDocNumber">
    /* shared.updateDocNumber */
    UPDATE ESACDFM
       SET CURRENT_SEQ = #{p.current_seq} 
         , LAST_GENERATED_DATE = #{p.last_generated_date}
         , STS = 'U'
     WHERE DOC_NO_CD = #{p.doc_no_cd} 
       AND COMP_CD = 'C100' /* TO-DO : 세션 정보로 수정 필요 */    
    </update>    

    <select id="findListOperOrgByUser" parameterType="String" resultType="map">
    /* shared.findListOperOrgByUser */
    /* 로그인한 사용자의 운영단위 유형 별 운영조직 목록 조회 */
    /* 콤보박스 or 그리드 콤보박스에 사용 */
    SELECT A.OPER_ORG_CD
         , CASE 
           WHEN 'ko_KR' = #{g.locale} THEN C.ORG_NM
           ELSE C.ORG_EN_NM
           END AS ORG_NM
         , B.ORG_TYP_CD
         , B.ORG_CD
      FROM ESAOOPM A 
         , ESAOOMG B 
         , ESAOGMG C
     WHERE A.SYS_ID = #{g.tenant}    
       AND A.USR_ID = #{g.username}
       --AND A.USE_YN = 'Y' /* 운영조직-사용자 use_yn 사용안함(null). insert/delete */
       AND B.SYS_ID = A.SYS_ID
       AND B.OPER_UNIT_CD = #{p}
       AND B.OPER_ORG_CD = A.OPER_ORG_CD
       AND B.USE_YN = 'Y'
       AND B.STS != 'D'
       AND C.SYS_ID = B.SYS_ID
       AND C.ORG_TYP_CD = B.ORG_TYP_CD
       AND C.ORG_CD = B.ORG_CD
       AND C.USE_YN = 'Y'
       AND C.STS != 'D'
    </select>
    
    <select id="findListOperOrgByLink" resultType="map">
    /* shared.findListOperOrgByLink */
    /* 운영조직 연결 정보를 기반으로 타 운영단위 운영조직 목록 조회 */
    /* 예) 구매운영조직에서 사용가능한 품목운영조직 (LinkType : POIO) */
    SELECT A.TARG_OPER_ORG_CD AS OPER_ORG_CD
         , CASE 
           WHEN 'ko_KR' = #{g.locale} THEN C.ORG_NM
           ELSE C.ORG_EN_NM
           END AS ORG_NM  
      FROM ESAOOLM A
         , ESAOOMG B 
         , ESAOGMG C
     WHERE A.SYS_ID = #{g.tenant} 
       AND A.LINK_TYP = #{p.link_typ}
       --AND A.USE_YN = 'Y' /* 운영조직-사용자 use_yn 사용안함. insert/delete */
       <choose>
		     <when test='p.oper_org_cds != null and p.oper_org_cds.size() != 0'>
					AND UPPER(A.SRC_OPER_ORG_CD) IN 
					<foreach collection="p.oper_org_cds" item="cd" separator="," open="(" close=")">
						#{cd}
					</foreach>
		     </when>
		     <otherwise>
		     		<bind name="linkPattern" value="'%' + p.oper_org_cd + '%'" />
		     		AND UPPER(A.SRC_OPER_ORG_CD) LIKE #{linkPattern}
		     </otherwise>
     </choose>
       AND A.SYS_ID = B.SYS_ID
       AND A.TARG_OPER_ORG_CD = B.OPER_ORG_CD
       AND B.USE_YN = 'Y'
       AND B.STS != 'D'
       AND B.SYS_ID = C.SYS_ID
       AND B.ORG_TYP_CD = C.ORG_TYP_CD
       AND B.ORG_CD = C.ORG_CD
       AND C.USE_YN = 'Y'
       AND C.STS != 'D'
    </select>
	
	<!-- 품목 운영조직 목록 -->
	<select id="findListOperOrgByIO" resultType="map">
	/* shared.findListOperOrgByIO */
           SELECT A.TARG_OPER_ORG_CD AS OPER_ORG_CD
                 ,CASE WHEN 'ko_KR' = #{g.locale} THEN C.ORG_NM
                       ELSE C.ORG_EN_NM
                   END AS ORG_NM
             FROM ESAOOLM A
	   INNER JOIN ESAOOMG B
	           ON B.SYS_ID      = A.SYS_ID
	          AND B.OPER_ORG_CD = A.TARG_OPER_ORG_CD
	   INNER JOIN ESAOGMG C
	           ON C.SYS_ID     = B.SYS_ID
	          AND C.ORG_TYP_CD = B.ORG_TYP_CD
	          AND C.ORG_CD     = B.ORG_CD
	   INNER JOIN ESAOOPM D
	           ON D.SYS_ID = B.SYS_ID
	          AND D.OPER_ORG_CD = B.OPER_ORG_CD
	        WHERE A.LINK_TYP = 'POIO'
			  AND A.LINK_YN  = 'Y'
			  --AND D.USE_YN = 'Y' /* 운영조직-사용자 use_yn 사용안함(null). insert/delete */
			  AND B.USE_YN   = 'Y'
			  AND B.STS     != 'D'
			  AND C.USE_YN   = 'Y'
			  AND C.STS     != 'D'
			  AND D.SYS_ID   = #{g.tenant}
			  AND D.USR_ID   = #{g.username}
        INTERSECT 
	       SELECT A.OPER_ORG_CD
			     ,CASE WHEN 'ko_KR' = #{g.locale} THEN C.ORG_NM
                       ELSE C.ORG_EN_NM
                   END AS ORG_NM
			 FROM ESAOOPM A
	   INNER JOIN ESAOOMG B
	           ON B.SYS_ID       = A.SYS_ID
		      AND B.OPER_ORG_CD  = A.OPER_ORG_CD
       INNER JOIN ESAOGMG C
               ON C.SYS_ID     = B.SYS_ID
		      AND C.ORG_TYP_CD = B.ORG_TYP_CD
		      AND C.ORG_CD     = B.ORG_CD
		    WHERE A.SYS_ID       = #{g.tenant}
		      AND A.USR_ID       = #{g.username}
		      --AND A.USE_YN = 'Y' /* 운영조직-사용자 use_yn 사용안함(null). insert/delete */
		      AND B.OPER_UNIT_CD = 'IO'
		      AND B.USE_YN = 'Y'
		      AND B.STS != 'D'
		      AND C.USE_YN = 'Y'
		      AND C.STS != 'D'
	</select>
	
    <select id="findListUserFunc" resultType="map">
	    /* shared.findListUserfunc : 사용자기능 목록 */
		SELECT DISTINCT B.MENU_CD, B.FUNC_CD
		  FROM ESAAURP A, ESAAURF B
		 WHERE     A.SYS_ID = #{g.tenant}
		       AND A.SYS_ID = B.SYS_ID
		       AND A.USR_ID = #{p}
		       AND A.ROLE_CD = B.ROLE_CD
		 ORDER BY B.MENU_CD, B.FUNC_CD
    </select>	    
    
    <select id="findListUserMenu" resultType="map">
    /*findListUserMenu */
        SELECT MM.UP_MENU_CD        AS PARENT_MENU_ID
             , MM.SYS_ID
             , MM.MENU_CD           AS MENU_ID
             , MM.USR_CLS
             , MAX(MM.MENU_TYP)     AS MENU_TYP
             , MAX(MM.MD_CLS)       AS MD_CLS
             , MM.SORT_ORD
             , ML.MENU_NM
             , ML.LANG_CD
             , ML.MENU_CD           AS ML_MENU_CD
             /*,    0                 AS "LEVEL" */
             , MM.MENU_CD           AS TREE
             , ML.MENU_NM           AS TREE_NM
             , MM.LINK_URL          AS MENU_URL
             , MM.SITE_ID            AS SITE_ID
          FROM ESAAUMM MM
          LEFT OUTER JOIN 
               ESAAUML ML
            ON (    MM.SYS_ID   = ML.SYS_ID
                AND MM.MENU_CD  = ML.MENU_CD
                AND ML.LANG_CD  = #{g.locale}
               )
         WHERE MM.SYS_ID    = #{g.tenant}
           AND MM.USE_YN    = 'Y'
           AND MM.STS       != 'D'
           <if test="p.site_id != null and p.site_id !=''">
           		AND (MM.SITE_ID = #{p.site_id}  or MM.SITE_ID IS NULL)
           </if>
        <choose>
            <when test="g.roles != null and g.roles.size() > 0">
           AND EXISTS ( SELECT 1
                          FROM ESAAURM RM
                         WHERE RM.SYS_ID  = MM.SYS_ID
                           AND RM.MENU_CD = MM.MENU_CD
                           AND RM.ROLE_CD IN
                        <foreach collection="g.roles" item="role" open="(" close=")" separator=",">
                        #{role}
                        </foreach>
                      )
            </when>
            <otherwise>
           AND 0 = 1
            </otherwise>
        </choose>
        <if test="p.usr_cls != null and p.usr_cls != ''">
           AND MM.USR_CLS   = #{p.usr_cls}
        </if>
         GROUP BY MM.UP_MENU_CD, MM.SYS_ID, MM.MENU_CD, MM.USR_CLS, MM.SORT_ORD, ML.MENU_NM, ML.LANG_CD, ML.MENU_CD, MM.LINK_URL, MM.SITE_ID
         ORDER BY CAST(SORT_ORD AS INT) ASC
    </select>
	
	<select id="findListDefaultMenu" resultType="map">
		/*findListDefaultMenu */
			SELECT 
				MM.UP_MENU_CD AS PARENT_MENU_ID,
				MM.SYS_ID,
				MM.MENU_CD AS MENU_ID,
				MM.USR_CLS,
				MAX(MM.MENU_TYP) MENU_TYP,
                MAX(MM.MD_CLS) MD_CLS,  
				MM.SORT_ORD,
				ML.MENU_NM,
				ML.LANG_CD,
				ML.MENU_CD AS ML_MENU_CD,
				MM.MENU_CD AS TREE,
				ML.MENU_NM AS TREE_NM,
				MM.LINK_URL AS MENU_URL
			FROM ESAAUMM MM
			LEFT OUTER JOIN ESAAUML ML
			ON (
				MM.SYS_ID = ML.SYS_ID
				AND MM.MENU_CD = ML.MENU_CD
				AND ML.LANG_CD = #{g.locale}
			)
			WHERE MM.SYS_ID = #{g.tenant}
			AND MM.STS != 'D'
			AND MM.USR_CLS = #{p.usr_cls}
			AND MM.USE_YN = 'Y'
		GROUP BY MM.UP_MENU_CD, MM.SYS_ID, MM.MENU_CD, MM.USR_CLS, MM.SORT_ORD, ML.MENU_NM, ML.LANG_CD, ML.MENU_CD, MM.LINK_URL
		ORDER BY CAST(SORT_ORD AS INT) ASC
	</select>
	
	
	<select id="findListSharedCate" resultType="map">
	/* shared.findListSharedCate */
           SELECT CATE_CD    AS DATA
                 ,CATE_NM    AS LABEL
                 ,CATE_LVL
                 ,UP_CATE_CD
             FROM ESMMCLS
            WHERE SYS_ID = #{g.tenant}
              AND CATE_LVL = 1
              AND STS != 'D'
              AND USE_YN = 'Y'
         ORDER BY CATE_CD
	</select>
	
	
	<select id="findListSharedCateByUpCateCd" resultType="map">
	/* shared.findListSharedCateByUpCateCd */
           SELECT CATE_CD    AS DATA
                 ,CATE_NM    AS LABEL
                 ,CATE_LVL
                 ,UP_CATE_CD
             FROM ESMMCLS
            WHERE SYS_ID     = #{g.tenant}
              AND UP_CATE_CD = #{p.up_cate_cd}
              AND CATE_LVL   = CAST(#{p.cate_lvl} AS INT)
              AND USE_YN = 'Y'
              AND STS != 'D'
         ORDER BY CATE_CD
	</select>
	
	<!-- 수량 단위 팝업 -->
	<select id="findListAmtUnit" resultType="map">
	/* shared.findListAmtUnit */
           SELECT D.DTL_CD
                 ,DL.DTL_CD_NM
             FROM ESACDDT D
       INNER JOIN ESACDDL DL
               ON D.SYS_ID   = DL.SYS_ID
              AND D.GRP_CD   = DL.GRP_CD
              AND D.DTL_CD   = DL.DTL_CD
              AND DL.LANG_CD = #{g.locale}
            WHERE D.SYS_ID   = #{g.tenant}
              AND D.GRP_CD   = 'C007'
              AND D.USE_YN   = 'Y'
		<if test='p.dtl_cd != null and p.dtl_cd != ""'>
			<bind name="dtlCdPattern" value="'%' + p.dtl_cd + '%'"/>
              AND UPPER(D.DTL_CD) LIKE UPPER(#{dtlCdPattern})
		</if>
		<if test='p.dtl_cd_nm != null and p.dtl_cd_nm != ""'>
			<bind name="dtlCdNmPattern" value="'%' + p.dtl_cd_nm + '%'"/>
              AND UPPER(DL.DTL_CD_NM) LIKE UPPER(#{dtlCdNmPattern})
		</if>
         ORDER BY D.DTL_CD
    </select>
    
    <select id="findListVendor" resultType="map">
	    /*shared.findListVendor : EO 협력사 목록 조회 */
	    SELECT VDGL.VD_CD
	         , VDGL.VD_NM
	         , VDGL.ERP_VD_CD
	         , VDGL.BIZ_REG_NO
	         , VDGL.CORP_REG_NO
	         , VDGL.NAT_CD
	         , VDGL.TAX_NO
	         , VDGL.LOC_CD
	         , VDOG.REG_TYP
	         , VDOG.OPER_ORG_CD
	      FROM ESMVDGL VDGL
	     INNER JOIN ESMVDOG VDOG
	        ON VDOG.SYS_ID = VDGL.SYS_ID
	       AND VDOG.VD_CD  = VDGL.VD_CD
	     WHERE VDGL.SYS_ID      = #{g.tenant}
	       AND VDOG.OPER_ORG_CD = #{p.oper_org_cd}
	       <if test='p.erp_vd_cd != null and p.erp_vd_cd != ""'>
	       <bind name="vdCdPattern" value='"%" + p.erp_vd_cd + "%"' />
	       AND VDGL.ERP_VD_CD   LIKE UPPER(#{vdCdPattern})
	       </if>
	       <if test='p.vd_nm != null and p.vd_nm != ""'>
	       <bind name="vdNmPattern" value='"%" + p.vd_nm + "%"' />
	       AND VDGL.VD_NM       LIKE UPPER(#{vdNmPattern})
	       </if>
	       <if test="p.biz_reg_no != null and p.biz_reg_no != ''">
	       <bind name="bizRegNoPattern" value='"%" + p.biz_reg_no + "%"' />
	       AND VDGL.BIZ_REG_NO  LIKE UPPER(#{bizRegNoPattern})
	       </if>
	       <if test="p.reg_typ != null and p.reg_typ != ''">
	       AND VDOG.REG_TYP     = #{p.reg_typ}
	       </if>
	     ORDER BY VDGL.ERP_VD_CD
    </select>
    
    <select id="findListVendorMaster" resultType="map">
    /*shared.findListVendorMaster : 협력사 마스터 목록 조회 */
        SELECT VDGL.VD_CD
             , VDGL.VD_NM
             , VDGL.ERP_VD_CD
             , VDGL.EVAL_VD_CD
             , CASE WHEN VDGL.ERP_VD_CD IS NOT NULL AND VDGL.ERP_VD_CD = VDGL.EVAL_VD_CD 
                         THEN 'Y' 
                    ELSE 'N' 
               END                  AS EVAL_VD_YN   /* 평가사여부 */ 
             , VDGL.NAT_CD
             , VDGL.BIZ_REG_NO
             , VDGL.TAX_NO
             , VDGL.EU_VAT_REG_NO
             , VDGL.CORP_REG_NO
             , VDGL.LOC_CD
          FROM ESMVDGL VDGL
         WHERE VDGL.SYS_ID      = #{g.tenant}
        <if test="p.nat_cd != null and p.nat_cd !=''">
           AND VDGL.NAT_CD      = #{p.nat_cd}
        </if>
        <if test='p.erp_vd_cd != null and p.erp_vd_cd != ""'>
            <bind name="vdCdPattern" value='"%" + p.erp_vd_cd + "%"' />
           AND VDGL.ERP_VD_CD   LIKE UPPER(#{vdCdPattern})
        </if>
        <if test="p.erp_vd_yn != null and p.erp_vd_yn eq 'Y'.toString()">
           AND VDGL.ERP_VD_CD   IS NOT NULL
        </if>
        <if test='p.vd_nm != null and p.vd_nm != ""'>
            <bind name="vdNmPattern" value='"%" + p.vd_nm + "%"' />
           AND VDGL.VD_NM       LIKE UPPER(#{vdNmPattern})
        </if>
        <if test="p.biz_reg_no != null and p.biz_reg_no != ''">
           <bind name="bizRegNoPattern" value='p.biz_reg_no + "%"' />
           AND VDGL.BIZ_REG_NO  LIKE UPPER(#{bizRegNoPattern})
        </if>
        <if test="p.tax_no != null and p.tax_no != ''">
           <bind name="taxNoPattern" value='p.tax_no + "%"' />
           AND VDGL.TAX_NO  LIKE UPPER(#{taxNoPattern})
        </if>
        <if test="p.eu_vat_reg_no != null and p.eu_vat_reg_no != ''">
           <bind name="euVatRegNoPattern" value='p.eu_vat_reg_no + "%"' />
           AND VDGL.EU_VAT_REG_NO  LIKE UPPER(#{euVatRegNoPattern})
        </if>
         ORDER BY VDGL.ERP_VD_CD
    </select>
    
    <resultMap id="vendorMap" type="java.util.HashMap">
		<id property="vd_cd"	column="VD_CD"/>
		<id property="erp_vd_cd" column="ERP_VD_CD"/>
		<result property="disp_vd_cd" column="DISP_VD_CD"/>
		<result property="vd_nm" column="VD_NM"/>
		<result column="VD_EN_NM" property="vd_en_nm" />
		<result column="BIZ_REG_NO" property="biz_reg_no"/>
		<result column="NAT_CD" property="nat_cd"/>
		<result column="TAX_NO" property="tax_no"/>
		<result column="EU_VAT_REG_NO" property="eu_vat_reg_no"/>
		<result column="DTL_ADDR_1" property="dtl_addr_1"/>
		<result column="DTL_ADDR_2" property="dtl_addr_2"/>
		<result column="OPER_ORG_CD" property="oper_org_cd"/>
		<result column="REG_TYP" property="reg_typ"/>
		<result column="TRAD_STP_YN" property="trad_stp_yn"/>
		<result column="FST_TRAD_FR_DT" property="fst_trad_fr_dt"/>
		<result column="TRAD_FR_DT" property="trad_fr_dt"/>
		<result column="TRAD_TO_DT" property="trad_to_dt"/>
		<result column="CHR_ID" property="chr_id"/>
		<result column="CHR_NM" property="chr_nm"/>
		<result column="CHR_DEPT" property="chr_dept"/>
		<result column="CHR_JOB" property="chr_job"/>
		<result column="CHR_PHONE_NO" property="chr_phone_no"/>
		<result column="CHR_MOBILE" property="chr_mobile"/>
		<result column="CHR_EMAIL" property="chr_email"/>
        <collection property="sg_nms" ofType="string" javaType="list" resultMap="sgGroupNmMap"/>
        <collection property="sgList" javaType="list" resultMap="sgGroupMap"/>
    </resultMap>
    
    <resultMap id="sgGroupNmMap" type="string">
	    <result column="sg_std_nm" property="sg_std_nm" />
	</resultMap>
	
    <resultMap id="sgGroupMap" type="java.util.HashMap">
    	<id property="sg_cd" column="SG_CD"/>
	    <result column="sg_std_nm" property="sg_std_nm" />
	</resultMap>
	
	
    <select id="findListAllVendor" resultMap="vendorMap">
    /** shared.findListAllVendor */
    	SELECT VD.VD_CD,
		       VD.ERP_VD_CD,
		       CASE WHEN VD.ERP_VD_CD IS NULL THEN VD.VD_CD ELSE VD.ERP_VD_CD END AS DISP_VD_CD,
		       VD.VD_NM,
		       VD.VD_EN_NM,
		       VD.BIZ_REG_NO,
		       VD.NAT_CD,
		       VD.TAX_NO,
		       VD.EU_VAT_REG_NO,
		       VD.DTL_ADDR_1,
		       VD.DTL_ADDR_2,
		       OG.OPER_ORG_CD,
		       OG.REG_TYP,
		       OG.TRAD_STP_YN,
		       OG.FST_TRAD_FR_DT,
		       OG.TRAD_FR_DT,
		       OG.TRAD_TO_DT,
		       CH.CHR_ID,
		       CH.CHR_NM,
		       CH.CHR_EMAIL,
		       CH.CHR_DEPT,
		       CH.CHR_JOB,
		       CH.CHR_PHONE_NO,
		       CH.CHR_MOBILE,
		       SG.SG_CD,
		       SG.SG_STD_NM       
	  FROM ESMVDGL VD
	       INNER JOIN
	       ESMVDOG OG
	       ON OG.SYS_ID = VD.SYS_ID
	       AND OG.VD_CD = VD.VD_CD
	       LEFT OUTER JOIN
	       (
	       		<choose>
	       		<when test="p.item_cds != null and p.item_cds.size() > 0">
	       			SELECT MT.SYS_ID, 
       				MT.ITEM_CD, 
       				MO.SG_CD, 
       				VDSG.VD_CD, 
       				SGPO.SG_STD_NM, 
       				VDSG.OPER_ORG_CD
	          FROM ESMMTGL MT
	               INNER JOIN ESMMTOP MO
	               ON MO.SYS_ID = MT.SYS_ID
	               AND MO.ITEM_CD = MT.ITEM_CD
	               AND MO.REG_STS = 'C'
	               INNER JOIN ESSVDTG VDSG
	               ON VDSG.SYS_ID = MO.SYS_ID
	               AND VDSG.TARG_GRP_CD = MO.SG_CD
	               INNER JOIN ESRSGPO SGPO
	               ON  SGPO.SYS_ID = VDSG.SYS_ID
	               AND SGPO.SG_CD = VDSG.TARG_GRP_CD
	         WHERE VDSG.TARG_GRP_TYP_CD = 'IS'
	               AND VDSG.TRAD_YN = 'Y'
	               <if test="p.item_cds != null and p.item_cds.size() > 0">
	               AND UPPER(MT.ITEM_CD) IN 
					<foreach collection="p.item_cds" item="cd" separator="," open="(" close=")">
						#{cd}
					</foreach>	/* rfx 아이템 목록*/
					</if>
	       		</when>
	       		<otherwise>
	       		SELECT 
	       			VDSG.SYS_ID
	       		   ,SGPO.SG_CD
			       ,SGPO.SG_STD_NM
			       ,VDSG.VD_CD
			       ,VDSG.OPER_ORG_CD
					FROM ESSVDTG VDSG
			                 INNER JOIN ESRSGPO SGPO
			                 ON  SGPO.SYS_ID = VDSG.SYS_ID
			                 AND SGPO.SG_CD = VDSG.TARG_GRP_CD
			           WHERE VDSG.TARG_GRP_TYP_CD = 'IS'
                 AND VDSG.TRAD_YN = 'Y'
                 AND VDSG.SYS_ID = #{g.tenant}
                 
                 </otherwise>
	       		</choose>	
	               ) SG
	      ON SG.SYS_ID = OG.SYS_ID
	       AND SG.VD_CD = OG.VD_CD
	       AND SG.OPER_ORG_CD = OG.OPER_ORG_CD
	       LEFT OUTER JOIN 
	       (	SELECT CP.SYS_ID,
	                     CA.OPER_ORG_CD,
	                     CP.VD_CD,
	                     CP.CHR_ID,
	                     CP.CHR_EMAIL,
	                     CP.CHR_NM,
	                     CP.USR_ID,
	                     CP.CHR_DEPT,
	                     CP.CHR_JOB,
	                     CP.CHR_PHONE_NO,
	                     CP.CHR_MOBILE
	                FROM ESAVDCP CP
	                     INNER JOIN ESACPCA CA
	                     ON CP.SYS_ID = CA.SYS_ID
	                     AND CP.CHR_ID = CA.CHR_ID
	               WHERE 1=1
	               	<if test="p.job_cls_cd != null and p.job_cls_cd != ''">
			         AND CA.JOB_CLS_CD = #{p.job_cls_cd} /* 직무 유형            */
			        </if>						
	                 AND CA.OPER_UNIT_CD = 'EO') CH         /* 협력사 담당자*/
	      ON CH.SYS_ID = OG.SYS_ID
	       AND CH.VD_CD = OG.VD_CD
	       AND CH.OPER_ORG_CD = OG.OPER_ORG_CD
	 WHERE     
	 		VD.SYS_ID = #{g.tenant}
	       AND (OG.TRAD_STP_YN = 'N'     /* 거래 중지 여부*/
	       			OR OG.TRAD_STP_YN IS NULL )
	       AND OG.OPER_ORG_CD = #{p.oper_org_cd}
	       <if test="p.nat_cd != null and p.nat_cd != ''">
	       AND VD.NAT_CD = #{p.nat_cd}         /* 국가 코드   */
	       </if>
	       <if test="p.reg_typ != null and p.reg_typ != ''">
	       AND OG.REG_TYP = #{p.reg_typ}	/*	등록유형 거래유형*/
	       </if>
	       <if test="p.vd_cd != null and p.vd_cd != ''">
	       <bind name="p_vd_cd" value='"%" + g.trim(p.vd_cd) + "%"' />
        	AND VD.VD_CD LIKE UPPER(#{p_vd_cd})
	       </if>
	       <if test="p.vd_nm != null and p.vd_nm != ''">
	       <bind name="p_vd_nm" value='"%" + g.trim(p.vd_nm) + "%"' />
        	AND VD.VD_NM LIKE UPPER(#{p_vd_nm})
	       </if>
	    ORDER BY VD.VD_CD DESC
    </select>
    
    <select id="findListSGVendor" resultMap="vendorMap">
    /** shared.findListSGVendor */
    	SELECT VD.VD_CD,
		       VD.ERP_VD_CD,
		       CASE WHEN VD.ERP_VD_CD IS NULL THEN VD.VD_CD ELSE VD.ERP_VD_CD END AS DISP_VD_CD,
		       VD.VD_NM,
		       VD.VD_EN_NM,
		       VD.BIZ_REG_NO,
		       VD.NAT_CD,
		       VD.TAX_NO,
		       VD.EU_VAT_REG_NO,
		       DTL_ADDR_1,
		       DTL_ADDR_2,
		       OG.OPER_ORG_CD,
		       OG.REG_TYP,
		       OG.TRAD_STP_YN,
		       OG.FST_TRAD_FR_DT,
               OG.TRAD_FR_DT,
               OG.TRAD_TO_DT,
		       CH.CHR_ID,
		       CH.CHR_NM,
		       CH.CHR_EMAIL,
		       CH.CHR_DEPT,
		       CH.CHR_JOB,
		       CH.CHR_PHONE_NO,
		       CH.CHR_MOBILE,
		       SG.SG_CD,
		       SG.SG_STD_NM
	  FROM ESMVDGL VD
	       INNER JOIN ESMVDOG OG
	       ON OG.SYS_ID = VD.SYS_ID
	       AND OG.VD_CD = VD.VD_CD
	       INNER JOIN
	       (     SELECT MT.SYS_ID, 
	                    MT.ITEM_CD,
	                    MO.SG_CD,
	                    VDSG.VD_CD,
	                    SGPO.SG_STD_NM,
	                    VDSG.OPER_ORG_CD
	              FROM ESMMTGL MT
	                   INNER JOIN ESMMTOP MO
	                   ON MT.SYS_ID = MO.SYS_ID
	                   AND MT.ITEM_CD = MO.ITEM_CD
	                   AND MO.REG_STS = 'C'
	                   
	                   INNER JOIN ESSVDTG VDSG
	                   ON MO.SYS_ID = VDSG.SYS_ID
	                   AND MO.SG_CD = VDSG.TARG_GRP_CD
	                   INNER JOIN ESRSGPO SGPO
	                   ON VDSG.SYS_ID = SGPO.SYS_ID
	                   AND VDSG.TARG_GRP_CD = SGPO.SG_CD
	                   
	             WHERE VDSG.TARG_GRP_TYP_CD = 'IS'
	                   AND VDSG.TRAD_YN = 'Y'
	                   <if test="p.item_cds != null and p.item_cds.size() > 0">
		               AND UPPER(MT.ITEM_CD) IN 
						<foreach collection="p.item_cds" item="cd" separator="," open="(" close=")">
							#{cd}
						</foreach>	/* rfx 아이템 목록*/
						</if>
	               		) SG
	       ON OG.SYS_ID = SG.SYS_ID
	       AND OG.VD_CD = SG.VD_CD
	       AND OG.OPER_ORG_CD = SG.OPER_ORG_CD
	       LEFT OUTER JOIN     
	   (SELECT CP.SYS_ID,
	                 CA.OPER_ORG_CD,
	                 CP.VD_CD,
	                 CP.CHR_EMAIL,
	                 CP.CHR_ID,
	                 CP.CHR_NM,
	                 CP.USR_ID,
	                 CP.CHR_DEPT,
	                 CP.CHR_JOB,
	                 CP.CHR_PHONE_NO,
	                 CP.CHR_MOBILE
	            FROM ESAVDCP CP
	                 INNER JOIN ESACPCA CA
	                 ON  CP.SYS_ID = CA.SYS_ID
	                 AND CP.CHR_ID = CA.CHR_ID
	           WHERE CA.JOB_CLS_CD = #{p.job_cls_cd}
	                 AND CA.OPER_UNIT_CD = 'EO') CH
	        ON OG.SYS_ID = CH.SYS_ID
	       AND OG.VD_CD = CH.VD_CD
	       AND OG.OPER_ORG_CD = CH.OPER_ORG_CD
	 WHERE     VD.SYS_ID = #{g.tenant}
	       AND (OG.TRAD_STP_YN = 'N'
	       			OR OG.TRAD_STP_YN IS NULL )		/* 거래중지여부*/
	       AND OG.OPER_ORG_CD = #{p.oper_org_cd}
	       <if test="p.nat_cd != null and p.nat_cd != ''">
	       AND VD.NAT_CD = #{p.nat_cd}         /* 국가 코드   */
	       </if>
	       <if test="p.reg_typ != null and p.reg_typ != ''">
	       AND OG.REG_TYP = #{p.reg_typ}	/*	등록유형 거래유형*/
	       </if>
	       <if test="p.vd_cd != null and p.vd_cd != ''">
	       <bind name="p_vd_cd" value='"%" + g.trim(p.vd_cd) + "%"' />
        	AND VD.VD_CD LIKE UPPER(#{p_vd_cd})
	       </if>
	       <if test="p.vd_nm != null and p.vd_nm != ''">
	       <bind name="p_vd_nm" value='"%" + g.trim(p.vd_nm) + "%"' />
        	AND VD.VD_NM LIKE UPPER(#{p_vd_nm})
	       </if>
    </select>
    
    <select id="findListLinkedVendor" resultType="map">
    /*shared.findListLinkedVendor */
	    SELECT GL.VD_CD
		,      GL.ERP_VD_CD
		,      CASE WHEN 'ko_KR' = #{g.locale} THEN GL.VD_NM ELSE GL.VD_EN_NM END AS VD_NM
		,      GL.STS
		,      GL.BIZ_REG_NO
		,      OG.REG_TYP
		FROM ESMVDGL GL
		INNER JOIN ESAOOLM LM
		ON (
		    LM.SYS_ID = GL.SYS_ID
		    AND LM.LINK_TYP = #{p.link_typ}
		    AND LM.SRC_OPER_ORG_CD = #{p.src_oper_org_cd}
		)
		INNER JOIN ESMVDOG OG
		ON (
		    OG.SYS_ID = GL.SYS_ID 
		    AND OG.VD_CD = GL.VD_CD
		    AND OG.OPER_ORG_CD = LM.TARG_OPER_ORG_CD
		    AND REG_TYP = 'C'
		)
		WHERE GL.SYS_ID = #{g.tenant}
		  AND GL.STS != 'D'
	 	  <if test='p.erp_vd_cd != null and p.erp_vd_cd != ""'>
	          <bind name="p_erp_vd_cd" value='"%" + p.erp_vd_cd + "%"' />
	      AND GL.ERP_VD_CD LIKE UPPER(#{p_erp_vd_cd})
	      </if>
	      <if test='p.vd_nm != null and p.vd_nm != ""'>
	          <bind name="p_vd_nm" value='"%" + p.vd_nm + "%"' />
	      AND GL.VD_NM LIKE UPPER(#{p_vd_nm})
	      </if>
    </select>

    <!-- 진행상태 코드 조회 ResultMap START -->
    <resultMap id="progressMap" type="java.util.HashMap">
        <result property="main_work_cd"       column="MAIN_WORK_CD"/>
        <result property="main_work_nm"       column="MAIN_WORK_NM"/>
        <result property="main_sort_ord"      column="MAIN_SORT_ORD"/>
        <result property="crnt_main_sort_ord" column="CRNT_MAIN_SORT_ORD"/>
        <result property="aftr_sort_ord"      column="AFTR_SORT_ORD"/>
        <collection property="stateList" javaType="java.util.ArrayList" resultMap="stateDtInfoMap"/>
    </resultMap>
    <!-- 진행상태 상세 코드 조회 Result Map  -->
    <resultMap id="stateDtInfoMap" type="java.util.HashMap">
        <result property="sub_work_cd"       column="SUB_WORK_CD"/>
        <result property="sub_work_nm"       column="SUB_WORK_NM"/>
        <result property="crnt_work_cd"      column="CRNT_WORK_CD"/>
        <result property="sub_sort_ord"      column="SUB_SORT_ORD"/>
        <result property="crnt_sub_sort_ord" column="CRNT_SUB_SORT_ORD"/>
    </resultMap>
    <!-- 진행상태 코드 조회 ResultMap END -->    
    <select id="findListProStatus" resultMap="progressMap" resultType="map">
		  SELECT MAIN.MAIN_WORK_CD,
		         (SELECT CDDL.DTL_CD_NM
		            FROM ESACDDT CDDT
		                 INNER JOIN ESACDDL CDDL
		                    ON (    CDDL.SYS_ID = CDDT.SYS_ID
		                        AND CDDL.GRP_CD = CDDT.GRP_CD
		                        AND CDDL.DTL_CD = CDDT.DTL_CD
		                        AND CDDL.LANG_CD = #{g.locale}
		                        AND CDDL.STS != 'D')
		           WHERE     CDDT.SYS_ID = #{g.tenant}
		                 AND CDDT.USE_YN = 'Y'
		                 AND CDDT.STS != 'D'
		                 AND CDDT.GRP_CD = MAIN.GRP_CD
		                 AND CDDT.DTL_CD = MAIN.MAIN_WORK_CD)
		            AS MAIN_WORK_NM,
		         MAIN.SORT_ORD AS MAIN_SORT_ORD,
		         (SELECT SORT_ORD
		            FROM ESPPGHD
		           WHERE SYS_ID = #{g.tenant} AND WORK_TYP = #{p.work_typ} AND MAIN_WORK_CD = #{p.main_work_cd}) AS CRNT_MAIN_SORT_ORD,
		         SUB.SUB_WORK_CD,
		         (SELECT CDDL.DTL_CD_NM
		            FROM ESACDDT CDDT
		                 INNER JOIN ESACDDL CDDL
		                    ON (    CDDL.SYS_ID = CDDT.SYS_ID
		                        AND CDDL.GRP_CD = CDDT.GRP_CD
		                        AND CDDL.DTL_CD = CDDT.DTL_CD
		                        AND CDDL.LANG_CD = #{g.locale}
		                        AND CDDL.STS != 'D')
		           WHERE     CDDT.SYS_ID = #{g.tenant}
		                 AND CDDT.USE_YN = 'Y'
		                 AND CDDT.STS != 'D'
		                 AND CDDT.GRP_CD = SUB.GRP_CD
		                 AND CDDT.DTL_CD = SUB.SUB_WORK_CD)
		            AS SUB_WORK_NM,
		         SUB.WORK_CLS,
		         SUB.CRNT_WORK_CD,
		         SUB.SORT_ORD AS SUB_SORT_ORD,
		         (SELECT SORT_ORD
		            FROM ESPPGDT
		           WHERE     SYS_ID = #{g.tenant}
		                 AND WORK_TYP = #{p.work_typ}
		                 AND MAIN_WORK_CD = #{p.main_work_cd}
		                 AND SUB_WORK_CD = #{p.sub_work_cd}) AS CRNT_SUB_SORT_ORD,
		         '1' AS AFTR_SORT_ORD
		    FROM ESPPGHD MAIN
		         LEFT JOIN ESPPGDT SUB
		            ON     MAIN.SYS_ID = SUB.SYS_ID
		               AND MAIN.WORK_TYP = #{p.work_typ}
		               AND MAIN.WORK_TYP = SUB.WORK_TYP
		               AND MAIN.MAIN_WORK_CD = SUB.MAIN_WORK_CD
		ORDER BY MAIN.SORT_ORD, SUB.SORT_ORD    
    </select>
    
    <!-- 
    	* 로그인한 사용자의 운영단위 유형 별 운영조직 목록 조회
    	* 콤보박스 or 그리드 콤보박스에 사용 
    -->
    <select id="findListOperOrgOfSp" parameterType="String" resultType="map">
    /* shared.findListOperOrgOfSp */
       SELECT B.OPER_ORG_CD
              ,CASE WHEN 'ko_KR' = #{g.locale} THEN C.ORG_NM
                       ELSE C.ORG_EN_NM 
                   END AS ORG_NM
                 ,B.ORG_TYP_CD
                 ,B.ORG_CD
             FROM ESAOOMG B
       INNER JOIN ESAOGMG C      
               ON C.SYS_ID = B.SYS_ID
              AND C.ORG_TYP_CD = B.ORG_TYP_CD
              AND C.ORG_CD = B.ORG_CD
            WHERE B.OPER_ORG_CD IN (
                    SELECT DISTINCT SRC_OPER_ORG_CD FROM ESAOOLM
                    <bind name="linkTyp" value="p + 'EO'"></bind>
                    WHERE LINK_TYP = #{linkTyp}
                    AND TARG_OPER_ORG_CD IN (
                        SELECT OPER_ORG_CD FROM ESMVDOG 
                        WHERE VD_CD = #{g.vd_cd}
                    )         
              ) 
			  AND B.SYS_ID = #{g.tenant}              
              AND B.LEAF_YN = 'Y'
              AND B.USE_YN = 'Y'
              AND B.STS != 'D'
              AND C.USE_YN = 'Y'
              AND C.STS != 'D'
         ORDER BY C.ORG_CD
    </select>
    
    <!-- ESAUMNL(메뉴얼 관리) 조회 -->
	<resultMap type="map" id="resultMap-findInfoHelpManual">
        <result property="mnl_cont" column="MNL_CONT" jdbcType="CLOB" javaType="string" />
    </resultMap>
	<select id="findInfoHelpManual" resultMap="resultMap-findInfoHelpManual">
	/* manual.findInfoManual */
           SELECT A.SYS_ID	    /*시스템 아이디 */
                 ,A.MENU_CD	    /*메뉴 코드 */
                 ,A.MNL_REV	    /*매뉴얼 차수 */
                 ,A.MNL_TYP	    /*매뉴얼 유형 */
                 ,A.RLS_REV	    /*게시 차수 */
                 ,A.MNL_ATT_NO  /*매뉴얼 첨부 번호 */
                 ,A.MNL_CONT	/*매뉴얼 내용 */
                 ,C.ORGN_FILE_NM
                 ,C.ATT_FILE_PATH
             FROM ESAUMNL A
       INNER JOIN (
                    SELECT S1.SYS_ID
                          ,S1.MENU_CD
                          ,S1.MNL_REV
                          ,S1.RLS_REV
                      FROM ESAUMNL S1
                     WHERE S1.SYS_ID  = #{g.tenant}
                       AND S1.MENU_CD = #{p.menu_cd}
			           AND S1.MNL_REV = ( SELECT MAX(MNL_REV)
			                               FROM ESAUMNL
			                              WHERE SYS_ID  = #{g.tenant}
			                                AND MENU_CD = #{p.menu_cd}
			                           )
                  ) B
               ON B.SYS_ID  = A.SYS_ID
              AND B.MENU_CD = A.MENU_CD
              AND B.RLS_REV = A.MNL_REV
  LEFT OUTER JOIN ESAATTH C
               ON C.SYS_ID = A.SYS_ID
              AND C.GRP_CD = A.MNL_ATT_NO
              AND C.STS != 'D'
	</select>
	
	<!-- 협력사 VDGL 조회 -->
    <select id="findListVendorBasic" resultType="map">
        /*shared.findListVendorBasic */
        SELECT VDGL.SYS_ID,
            VDGL.VD_CD,
            CASE WHEN 'ko_KR' = #{g.locale} THEN VDGL.VD_NM ELSE VDGL.VD_EN_NM END AS VD_NM,
            VDGL.ERP_VD_CD,
            VDGL.ERP_VD_CD,
            VDGL.EVAL_VD_CD,
            VDGL.CORP_REG_NO,
            VDGL.CORP_BIZ_REG_NO,
            VDGL.NAT_CD,
            CASE
                WHEN VDGL.NAT_CD = 'KR' THEN VDGL.BIZ_REG_NO
                WHEN VDGL.NAT_CD = 'CN' THEN VDGL.TAX_NO
                WHEN (SELECT COUNT(*)
                        FROM ESACDDT
                       WHERE SYS_ID = VDGL.SYS_ID
                         AND GRP_CD = 'C008'
                         AND DTL_CD = VDGL.NAT_CD) > 0 THEN VDGL.EU_VAT_REG_NO
                ELSE VDGL.TAX_NO
            END BIZ_REG_NO,
            VDGL.EMAIL, 
            VDGL.PHONE_NO,
            CASE WHEN 'ko_KR' = #{g.locale} THEN VDGL.REP_NM ELSE VDGL.REP_EN_NM END REP_NM,
            VDGL.LOC_CD,
            CASE WHEN 'ko_KR' = #{g.locale} THEN VDGL.DTL_ADDR_1 ELSE VDGL.DTL_ADDR_EN_1 END DTL_ADDR_1
        FROM ESMVDGL VDGL
        WHERE VDGL.SYS_ID = #{g.tenant}
            <if test='p.erp_vd_cd != null and p.erp_vd_cd != ""'>
            <bind name="cdPattern" value='"%" + p.erp_vd_cd + "%"' />
              AND VDGL.ERP_VD_CD LIKE UPPER(#{cdPattern})
            </if>
            <if test='p.vd_nm != null and p.vd_nm != ""'>
            <bind name="namePattern" value='"%" + p.vd_nm + "%"' />
              AND CASE WHEN 'ko_KR' = #{g.locale} THEN VDGL.VD_NM ELSE VDGL.VD_EN_NM END LIKE UPPER(#{namePattern})
            </if>
         ORDER BY VDGL.VD_CD
    </select>
    
    <select id="findListFunctionAndUrlByUserRoles" resultType="map">
    /* shared.findListFunctionAndUrlByUserRoles : 사용자기능,url 목록 */
        SELECT DISTINCT A.MENU_CD, A.FUNC_CD
          FROM ( /* menuCode-functionCode     union all   menuCode-callPattern */ 
                 SELECT AURF.MENU_CD
                      , AURF.FUNC_CD
                   FROM ESAAURF AURF
                  WHERE AURF.SYS_ID = #{g.tenant}
                <choose>
                    <when test="g.roles != null and g.roles.size() > 0">
                    AND AURF.ROLE_CD IN
                        <foreach collection="g.roles" item="role" open="(" close=")" separator=",">
                        #{role}
                        </foreach>
                    </when>
                    <otherwise>
                    AND 0 = 1
                    </otherwise>
                </choose>
                  GROUP BY AURF.MENU_CD, AURF.FUNC_CD
                
                  UNION ALL
                        
                 SELECT AURF.MENU_CD
                      , AURS.CALL_PTRN  AS "FUNC_CD"
                   FROM ESAAURF AURF
                  INNER JOIN
                        ESAAURS AURS
                     ON (    AURS.SYS_ID    = AURF.SYS_ID
                         AND AURS.MENU_CD   = AURF.MENU_CD
                         AND AURS.FUNC_CD   = AURF.FUNC_CD
                        )
                  WHERE AURF.SYS_ID = #{g.tenant}
                <choose>
                    <when test="g.roles != null and g.roles.size() > 0">
                    AND AURF.ROLE_CD IN
                        <foreach collection="g.roles" item="role" open="(" close=")" separator=",">
                        #{role}
                        </foreach>
                    </when>
                    <otherwise>
                    AND 0 = 1
                    </otherwise>
                </choose>
                  GROUP BY AURF.MENU_CD, AURS.CALL_PTRN 
               ) A
         ORDER BY A.MENU_CD, A.FUNC_CD
    </select>
    
    <insert id="insertLoginInfo">
    	/* shared.insertLoginInfo */
    	INSERT INTO ESALLOG (
    		SYS_ID,
    		LOG_ID,
    		USR_ID,
    		USR_CLS,
    		LOGIN_IP,
    		LOGIN_DT
    	) VALUES (
    		#{g.tenant},
    		#{p.log_id},
    		#{g.username},
    		#{p.usr_cls},
    		#{p.login_ip},
    		#{g.now}
    	)
    </insert>
    
    <update id="updateUser">
    /* shared.saveUser: 내부 사용자 정보 수정 */	
		UPDATE ESAUSER
		SET
				USR_NM = #{p.usr_nm}
				<if test='p.pw != null'>
				,PW = #{p.pw}
				</if>
				,USR_EN_NM = #{p.usr_en_nm}
				<if test="p.dept_cd != null and p.dept_cd != ''">
				,DEPT_CD = #{p.dept_cd}
				</if>
				,USE_YN = #{p.use_yn}
				,MOBILE_NO = #{p.mobile_no}
				,PHONE_NO = #{p.phone_no}
				,FAX_NO = #{p.fax_no}
				,EMAIL = #{p.email}
				,MAIL_RECEIVED_YN = #{p.mail_received_yn}
				,SMS_RECEIVED_YN = #{p.sms_received_yn}
				,PROPERTY = #{p.property}::json
				,COMPANY_ID = #{p.company_id}
				,SITE_ID = #{p.usr_site_id}
				,TIMEZONE_CD = #{p.timezone_cd}
				,STS = 'U'
				,MOD_ID = #{g.username}
				,MOD_DT = #{g.now}
		WHERE SYS_ID = #{g.tenant}
		AND USR_ID = #{g.username}
	</update>
	
	<select id="findAccountDisabledInfo" resultType="Map">
	/* shared.findAccountDisabledInfo: 미사용 계정 설정 기준 정보 조회 */
		SELECT ACC_DISABLE_CD AS ACCOUNTDISABLECODE
		FROM ESAACCN
		WHERE SYS_ID = #{g.tenant}
	</select>
	
	<select id="getCodeName" resultType="String">
	/* shared.getCodeName: 서식 내용조회시 사용, 코드 값을 코드명으로 변환하기 위해 */
            SELECT DTL_CD_NM   /* 상세 코드 명 */
              FROM ESACDDL
             WHERE SYS_ID  = #{g.tenant}
               AND GRP_CD  = #{p.grp_cd}
               AND DTL_CD  = #{p.cd}
               AND LANG_CD = #{g.locale}
               AND STS    != 'D'
	</select>
	
	<select id="findOperOrgNameByCode" resultType="String">
	/* shared.findOperOrgNameByCode: 구매운영조직코드를 이용해 운영조직명을 조회 */
         SELECT CASE  WHEN 'ko_KR' = #{g.locale} 
                      THEN C.ORG_NM
                      ELSE C.ORG_EN_NM
                END AS ORG_NM
          FROM ESAOOPM A 
             , ESAOOMG B 
             , ESAOGMG C
         WHERE A.SYS_ID       = #{g.tenant}    
           AND A.USR_ID       = #{g.username}
           --AND A.USE_YN = 'Y' /* 운영조직-사용자 use_yn 사용안함(null). insert/delete */
           AND A.OPER_ORG_CD  = #{p}
           AND B.SYS_ID       = A.SYS_ID
           AND B.OPER_UNIT_CD = 'PO'
           AND B.OPER_ORG_CD  = A.OPER_ORG_CD
           AND B.USE_YN       = 'Y'
           AND B.STS         != 'D'
           AND C.SYS_ID       = B.SYS_ID
           AND C.ORG_TYP_CD   = B.ORG_TYP_CD
           AND C.ORG_CD       = B.ORG_CD
           AND C.USE_YN       = 'Y'
           AND C.STS         != 'D'
	</select>
	
	<select id="findListOperOrgAll" parameterType="String" resultType="map">
        /* shared.findListOperOrgAll */
        /* 운영단위 유형 별 운영조직 목록 조회 */
        /* 콤보박스 or 그리드 콤보박스에 사용 */
        SELECT B.OPER_ORG_CD
             , CASE
               WHEN 'ko_KR' = #{g.locale} THEN C.ORG_NM
               ELSE C.ORG_EN_NM
               END AS ORG_NM
             , B.ORG_TYP_CD
             , B.ORG_CD
             , B.OPER_UNIT_CD
          FROM ESAOOMG B
             , ESAOGMG C
         WHERE B.SYS_ID = #{g.tenant}
           <if test="p != null and p != ''">
           AND B.OPER_UNIT_CD = #{p}
           </if>
           AND B.STS != 'D'
           AND B.LEAF_YN = 'Y'
           AND B.USE_YN = 'Y'
           AND C.SYS_ID = B.SYS_ID
           AND C.ORG_TYP_CD = B.ORG_TYP_CD
           AND C.ORG_CD = B.ORG_CD
           AND C.USE_YN = 'Y'
           AND C.STS != 'D'
    </select>
    
    <select id="findListZipCodeByDB" resultType="map">
    	<if test='p.srch_word != null and p.srch_word != ""'>
            <bind name="wordPattern" value='"%" + p.srch_word + "%"' />
    	</if>
    	SELECT d.*
	         FROM (
                   SELECT rownum AS RNUM
                         ,c.*
                     FROM
                         (
                         	SELECT DISTINCT
                         	    ZIP_CD	AS zipNo
						   		, SIDO_NM || ' ' || SIGUNGU_NM || ' '
						   		|| EYUP_NM || ' '
						   		|| DORO_NM || DECODE(JIHA_FG,0,' ',1,' 지하',2,' 공중')
						   		|| BUILD_MST || DECODE(BUILD_DTL,0,'','-'||BUILD_DTL)
						   		|| CASE WHEN (EYUPDONG_NO = '00') THEN Decode(SIGUNGU_BUILD_NM, '', '', ' (' || SIGUNGU_BUILD_NM || ')' )
						                    WHEN (EYUPDONG_NO = '01') THEN ' ('||RI_NM || Decode(SIGUNGU_BUILD_NM, '', '', ',' || SIGUNGU_BUILD_NM ) ||')' 
						        END AS lnmAdres
						        , SIDO_NM || ' ' || SIGUNGU_NM || ' '
						   		|| EYUP_NM || ' '
						   		|| RI_NM || ' '
						   		|| BJD_NM || DECODE(JIHA_FG,0,' ',1,' 지하',2,' 공중')
						   		|| JIBUN_MST || '-' || JIBUN_DTL
						   		AS rnAdres
						   		, SIDO_NM_ENG || ' ' || SIGUNGU_NM_ENG || ' ' || EYUP_NM_ENG || ' ' || DORO_NM_ENG AS enAdres
						    FROM ESAPOMD
						    WHERE DORO_NM LIKE #{wordPattern}
						    OR BJD_NM LIKE #{wordPattern}
						    OR EYUP_NM LIKE #{wordPattern}
						    OR RI_NM LIKE #{wordPattern}
						    OR DELIVERY_NM LIKE #{wordPattern}
						    OR SIGUNGU_BUILD_NM LIKE #{wordPattern}
					    ) c
                  WHERE rownum <![CDATA[ <= ]]> #{p.end_row}
                 ) d
            WHERE rnum <![CDATA[ >= ]]> #{p.start_row}
            ORDER BY d.zipNo DESC
    </select>
    
    <select id="findListSiteCombo" resultType="map">
    /* shared.findListSiteCombo: Site 조회 */
           SELECT DISTINCT T4.ID AS DATA
                 ,T4.NAME     AS LABEL
                 ,PIN_INFO[0] AS LON
                 ,PIN_INFO[1] AS LAT
                 ,T4.ID       AS SITE_ID
             FROM ESAUSER T1
       INNER JOIN ESAAURP T2
               ON T2.SYS_ID = T1.SYS_ID
              AND T2.USR_ID = T1.USR_ID
       INNER JOIN ESA_ROLE_SITE T3
               ON T3.SYS_ID = #{g.tenant}
              AND T3.ROLE_CD = T2.ROLE_CD
       INNER JOIN SITE T4
               ON T4.ID = T3.SITE_ID
            WHERE T1.USR_ID = #{g.username}
         ORDER BY T4.NAME
    </select>
    
    <select id="findListVerCombo" resultType="map">
    /* shared.findListVerCombo: VERSION 조회 */
           SELECT ID   AS DATA
                 ,NAME AS LABEL
             FROM SP_VERSION
            WHERE SITE_ID = #{p.site_id}
		<choose>
		     <when test='p.version_sts != null and p.version_sts.size() != 0'>
              AND STS IN 
				<foreach collection="p.version_sts" item="sts" separator="," open="(" close=")">
					#{sts}
				</foreach>
		     </when>
		     <otherwise>
              AND STS = ''
		     </otherwise>
     	</choose>
    </select>
    
    <select id="findListAreaCombo" resultType="map">
    /* shared.findListAreaCombo: AREA 조회 */
           SELECT ID   AS DATA
                 ,NAME AS LABEL
                 ,ID
                 ,PID
                 ,VERSION_ID
                 ,TAG
                 ,PROPERTY
             FROM SP_AREA
            WHERE VERSION_ID = #{p.version_id}
              AND TYP='anchor'
         ORDER BY PATH
    </select>
    
    <select id="findListModelGroup" resultType="map">
<!--     	<bind name="areaId" value="p.area_id[0]" /> -->
    /* shared.findListModelGroup: 영역 조회 */
           SELECT GROUP_ID   AS DATA
                 ,GROUP_NAME AS LABEL
             FROM SELECT_MODEL_GROUP_BY_AREA_ID(#{p.area_id})
    </select>
    
    <select id="findListDoor" resultType="map">
           SELECT ID
                 ,NODE_ID
                 ,SITE_ID
                 ,NAME
                 ,PROPERTY
                 ,STS
                 ,LAST_VISITOR
                 ,USE_FLAG
                 ,UPDATED_DT
                 ,GPS
             FROM VH_DOOR
            WHERE SITE_ID = #{p.siteId}::bigint
    </select>
    
    <select id="findListCompanyCombo" resultType="map">
    /* shared.findListCompanyCombo : 사용자가 권한이 있는 센터의 운영사 목록 */
           SELECT C.ID   AS DATA
                 ,C.NAME AS LABEL
             FROM ESAUSER A
       INNER JOIN SITE B
               ON B.ID = ANY(A.SITE_IDS)
       INNER JOIN COMPANY C
               ON C.ID = B.COMPANY_ID
            WHERE A.USR_ID = #{g.username}
    </select>
    
    <select id="findListSiteByCompany" resultType="map">
    /* shared.findListSiteByCompany : 현장 목록 */
           SELECT B.ID   AS SITE_ID
                 ,B.NAME AS SITE_NAME
                 ,C.ID   AS COMPANY_ID
                 ,C.NAME AS COMPANY_NAME
             FROM ESAUSER A
       INNER JOIN SITE B
               ON B.ID = ANY(A.SITE_IDS)
       INNER JOIN COMPANY C
               ON C.ID = B.COMPANY_ID
            WHERE A.USR_ID = #{g.username}
              AND C.ID = #{p.company_id}
    </select>
    
    <select id="findListUserSiteCombo" resultType="map">
    /* shared.findListUserSiteCombo : 현장 목록 */
           SELECT B.ID   AS SITE_ID
                 ,C.NAME || ' / ' || B.NAME AS SITE_NAME
             FROM SITE B
       INNER JOIN COMPANY C
               ON C.ID = B.COMPANY_ID
            WHERE b.USE_FLAG = 'Y'
         ORDER BY C.NAME
                 ,B.NAME 
    </select>
    
    <select id="findListUserSiteComboByLevel" resultType="map">
    /* shared.findListUserSiteComboByLevel : 현장 목록 */
           SELECT B.ID   AS SITE_ID
                 ,C.NAME || ' / ' || B.NAME AS SITE_NAME
             FROM (
             <if test='p.access_level == "company"'>
                   -- 운영사 관리자의 운영사로 현장 조회
                   SELECT ID
                         ,NAME
                         ,COMPANY_ID
                         ,USE_FLAG
                    FROM SITE
                   WHERE COMPANY_ID = #{p.company_id}
                   UNION
			</if>
                   -- 운영사 관리자의 현장권한을 포함한 계정 조회
                  SELECT ID
                        ,NAME
                        ,COMPANY_ID
                        ,USE_FLAG
                    FROM SITE
                   WHERE ID IN ( SELECT unnest(site_ids) AS SITE_ID
                                   FROM ESAUSER
                                  WHERE USR_ID = #{g.username} )
                  ) B
        INNER JOIN COMPANY C
                ON C.ID = B.COMPANY_ID
             WHERE b.USE_FLAG = 'Y'
          ORDER BY C.NAME
                  ,B.NAME 
    </select>
    
    <!-- 홈 유형 저장 -->
	<update id="saveUserHomeTyp">
		/**saveUserHomeTyp**/
		UPDATE ESAUSER
		SET HOME_TYP = #{p.home_typ}
		,   MOD_ID = #{g.username}
		,   MOD_DT = #{g.now}
		WHERE SYS_ID = #{g.tenant}
		  AND USR_ID = #{g.username}
	</update>
</mapper>