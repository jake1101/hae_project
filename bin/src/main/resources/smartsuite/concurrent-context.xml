<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- concurrent-context.xml -->
	<task:annotation-driven executor="executor"/>

	<bean id="executor" class="smartsuite.spring.concurrent.DefaultThreadPoolExecutorFactoryBean">
		<property name="executeResolver" ref="executeResolverBundle"/>
		<property name="corePoolSize" value="1"/>
		<property name="maxPoolSize" value="30"/>
		<property name="queueCapacity" value="1000"/>
	</bean>
	
	<bean id="executeResolverBundle" class="smartsuite.spring.concurrent.ExecuteResolverBundle">
		<property name="resolvers"> 
			<list>
				<ref bean="tenancyExecuteResolver"/>
				<ref bean="authenticationExecuteResolver"/> 
			</list>
		</property>
	</bean> 
	
	<!-- @Async 사용 시, 테넌시 정보 등록 -->
	<bean id="tenancyExecuteResolver" p:defaultTenant-ref="defaultTenant"
		  class="smartsuite.spring.tenancy.concurrent.TenancyExecuteResolver"/>
	
	<!-- @Async 사용 시, 사용자 정보 등록 -->
	<bean id="authenticationExecuteResolver" 
		  class="smartsuite.concurrent.AuthenticationExecuteResolver"/>

</beans>