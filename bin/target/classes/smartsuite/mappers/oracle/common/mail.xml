<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mail">
	
	<resultMap type="map" id="resultMap-findInfoMail">
        <result property="tmp_cont" column="TMP_CONT" jdbcType="CLOB" javaType="string" />
    </resultMap>
	<select id="findListMail" resultMap="resultMap-findInfoMail">
		/* mail.findListMail : 메일 목록 조회*/
		SELECT A.SYS_ID
			, A.TMP_ID
			, A.TMP_CLS
			, A.TMP_BAS_ID
			, A.TMP_NM
			, A.TMP_CONT
			, A.PARAM_CLASS_NM
			, A.STS
			, A.REG_ID
			, A.REG_DT
			, A.MOD_ID
			, A.MOD_DT
			, B.MAIL_SET_ID
			, B.MAIL_SET_NM
		
		FROM ESATMPM A
			INNER JOIN ESACFML B
				ON 	A.SYS_ID = B.SYS_ID
				AND A.TMP_ID = B.TMP_ID 
		
		WHERE A.SYS_ID = #{g.tenant}
			AND A.STS != 'D'
	</select>
	
	
	<resultMap type="map" id="resultMap-findInfoMailById">
        <result property="tmp_cont" column="TMP_CONT" jdbcType="CLOB" javaType="string" />
    </resultMap>
	<select id="findListMailByMailId" resultMap="resultMap-findInfoMailById">
		/* mail.findListMailById : 메일 목록 상세 조회*/
		SELECT A.SYS_ID
			, A.TMP_ID
			, A.TMP_CLS
			, A.TMP_BAS_ID
			, A.TMP_NM
			, A.TMP_CONT
			, A.PARAM_CLASS_NM
			, A.STS
			, A.REG_ID
			, A.REG_DT
			, A.MOD_ID
			, A.MOD_DT
			, B.MAIL_SET_ID
			, B.MAIL_SET_NM
			, B.USE_YN
			, B.SND_CLS
		
		FROM ESATMPM A
			INNER JOIN ESACFML B
				ON 	<!-- A.SYS_ID = B.SYS_ID
				AND   -->A.TMP_ID = B.TMP_ID 
				AND  B.MAIL_SET_ID = #{p.mail_set_id}
		
		WHERE <!-- A.SYS_ID = #{g.tenant} 
			AND -->A.STS != 'D'
	</select>
	
	<!-- 저장 -->
	<insert id="insertContent">
		/* mail.saveListMail  템플릿 본문 신규저장 */
		INSERT INTO ESATMPM(
			SYS_ID
			, TMP_ID
			, TMP_CLS
			, TMP_BAS_ID
			, TMP_NM
			, TMP_CONT
			, PARAM_CLASS_NM
			, STS
			, REG_ID
			, REG_DT
			, MOD_ID
			, MOD_DT
		)
		VALUES(
			#{g.tenant}
			,#{p.tmp_id}
			,(SELECT TMP_CLS FROM ESATMPB WHERE ESATMPB.TMP_BAS_ID = #{p.tmp_bas_id})
			,#{p.tmp_bas_id}
			,#{p.tmp_nm}
			,#{p.tmp_cont}
			,#{p.param_class_nm}
			,'C'
			,#{g.username}
			,#{g.now}
			,#{g.username}
			,#{g.now}
		)
			
	</insert>
	<insert id="insertMail">
		/* mail.saveListMail 메일 설정 신규저장*/
		INSERT INTO ESACFML(
			SYS_ID
			, MAIL_SET_ID
			, MAIL_SET_NM
			, TMP_ID
			, USE_YN
			, SND_CLS
			, STS
			, REG_ID
			, REG_DT
			, MOD_ID
			, MOD_DT
		)
		VALUES(
			#{g.tenant}
			,#{p.mail_set_id}
			,#{p.mail_set_nm}
			 ,#{p.tmp_id}
			,#{p.use_yn}
			,#{p.snd_cls}
			,'C'
			,#{g.username}
			,#{g.now}
			,#{g.username}
			,#{g.now}
		)
	</insert>
	
	<update id="updateMail">
		/*mail.saveListMail 메일 설정 수정*/
		UPDATE ESACFML
			SET STS='U'
				, MOD_ID = #{g.username}
				, MOD_DT = #{g.now}
					, MAIL_SET_ID = #{p.mail_set_id}
					, MAIL_SET_NM = #{p.mail_set_nm}
					, USE_YN = #{p.use_yn}
					, SND_CLS = #{p.snd_cls}
			WHERE SYS_ID = #{g.tenant}
		 		AND MAIL_SET_ID = #{p.mail_set_id}
	</update>
	
	<update id="updateContent">
		/*mail.saveListMail 템플릿 본문 수정*/
		UPDATE ESATMPM
			SET STS='U'
				, MOD_ID = #{g.username}
				, MOD_DT = #{g.now}
				
				<if test='p.param_class_nm != null' >
					, PARAM_CLASS_NM = #{p.param_class_nm}	
				</if>
				<if test='p.tmp_bas_id != null' >
					, TMP_BAS_ID = #{p.tmp_bas_id}	
				</if>
				<if test='p.tmp_cont != null' >
					, TMP_CONT = #{p.tmp_cont}	
				</if>
			 WHERE SYS_ID = #{g.tenant}
		 		AND TMP_ID = #{p.tmp_id}
	</update>
	
	<select id="getCountMail" resultType="int">
		SELECT COUNT(*)
    	  FROM ESATMPM
    	 WHERE SYS_ID = #{g.tenant}
     		  AND TMP_ID = #{p.tmp_id}
	</select>
	
	

	<delete id="deleteMail">
		/* mail.deleteList: ESACFML 메일설정 삭제 */
		DELETE FROM ESACFML
			WHERE SYS_ID= #{g.tenant}
				AND MAIL_SET_ID = #{p.mail_set_id}
	</delete>
	<delete id="deleteContent">
		/* mail.deleteList: ESATMPM 템플릿 본문 삭제 */
		DELETE FROM ESATMPM A
			WHERE A.SYS_ID= #{g.tenant}
				AND A.TMP_ID =#{p.tmp_id}
	</delete>
	
	
	<select id="getAllTmpBasIdList" resultType="map">
		/*콤보박스 select*/
		SELECT TMP_BAS_ID
			, TMP_BAS_NM
			
    	  FROM ESATMPB
    	 WHERE SYS_ID = #{g.tenant}
    	 	AND TMP_CLS = 'TM'
    	 	
	</select>
	
	<resultMap type="map" id="resultMap-findListHistory">
        <result property="fail_cont" column="FAIL_CONT" jdbcType="CLOB" javaType="string" />
    </resultMap>
	<select id="findListHistory" resultMap="resultMap-findListHistory">
		/* mail.findListHistory 메일전송이력 조회 */
		SELECT A.SYS_ID
			, A.MAIL_ID
			, A.MAIL_SET_ID
			, A.FROM_ADDR
			, A.FROM_NM
			, A.TO_ADDR
			, A.TO_NM
			, A.FROM_NM
			, A.SND_DT
			, A.MAIL_TIT
			, B.SND_CLS
			, A.SND_YN
			, A.REG_ID
			, A.REG_DT
			
		FROM ESAMAIL A
			INNER JOIN ESACFML B 
				ON A.MAIL_SET_ID = B.MAIL_SET_ID
				WHERE A.MAIL_SET_ID = #{p.mail_set_id}
					<if test="p.from_date != null">
						AND A.SND_DT <![CDATA[>=]]> #{p.from_date}
					</if>
					<if test="p.to_date != null">
						AND A.SND_DT <![CDATA[<]]> #{p.to_date}
					</if>
	</select>
	
	<!-- 메일설정(ESACFML) 테이블에서 TMP_ID select -->
	<select id="findContent" resultType="map">
		SELECT A.TMP_ID FROM ESACFML A
			WHERE A.SYS_ID= #{g.tenant}
				AND A.MAIL_SET_ID = #{p.mail_set_id}
	</select>
	
	<insert id="insertEsamail">
		INSERT INTO ESAMAIL
		<trim prefix="(" suffix=")" prefixOverrides=",">
      			SYS_ID						
      			,REG_ID
      			,REG_DT		
      			,MAIL_ID					/*메일 아이디 */
      			,MAIL_SET_ID				/*메일 설정 아이디 */			
      		<if test="p.mail_tit != null">	
      			,MAIL_TIT					/*메일 제목*/
      		</if>
      		<if test="p.mail_cont != null">
      			,MAIL_CONT					/*메일 내용*/
      		</if>
      		<if test="p.to_nm != null">
      			,TO_NM						/*송신자 이름*/
      		</if> 
      		<if test="p.to_addr != null">
      			,TO_ADDR					/*송신자 주소*/
      		</if>
    		<if test="p.from_nm != null">
      			,FROM_NM					/*수신자 이름*/
      		</if>
      		<if test="p.from_addr != null">
      			,FROM_ADDR					/*수신자 주소*/
      		</if>
      		<if test="p.snd_yn != null">
      			,SND_YN						/*전송 여부*/
      		</if>
      		<if test="p.snd_dt != null">
      			,SND_DT						/*전송 일시*/
      		</if>
      	</trim>
      	<trim prefix="VALUES (" suffix=")" prefixOverrides=",">
      			#{g.tenant}			
      			, #{g.username}
      			, #{g.now}
      			, #{p.mail_id}					
      			, #{p.mail_set_id}
     		<if test="p.mail_tit != null">				
      			, #{p.mail_tit}
      		</if>
      		<if test="p.mail_cont != null">
      			, #{p.mail_cont}					
      		</if>
      		<if test="p.to_nm != null">
      			, #{p.to_nm}						
      		</if>
      		<if test="p.to_addr != null">
      			, #{p.to_addr}					
      		</if>
    		<if test="p.from_nm != null">
      			, #{p.from_nm}					
      		</if>
      		<if test="p.from_addr != null">
      			, #{p.from_addr}					
      		</if>
      		<if test="p.snd_yn != null">
      			, #{p.snd_yn}						
      		</if>
      		<if test="p.snd_dt != null">
      			, #{p.snd_dt}						
      		</if>
      	</trim>
	</insert>

	<!-- 보내지 않은 메일 (ESAMAIL) 목록 조회  -->
	<resultMap type="map" id="resultMap-findListSendMail">
        <result property="mail_cont" column="MAIL_CONT" jdbcType="CLOB" javaType="string" />
    </resultMap>
	<select id="findListSendMail" resultMap="resultMap-findListSendMail">
		/* commonCode.findListSendMail */
	    SELECT MAIL_ID
		    , MAIL_SET_ID
		    , MAIL_TIT
		    , MAIL_CONT
		    , FROM_ADDR
		    , FROM_NM
		    , TO_ADDR
		    , TO_NM
		    , SND_DT
		    , SND_YN
		    , REG_DT
		    , REG_ID 
	     FROM ESAMAIL
	    WHERE SND_YN = 'N'
	</select>
	
	<!-- 전송여부 변경  -->
	<update id="updateSendComplete">
		/* mail.updateSendComplete : 메일 전송 여부 업데이트*/
		UPDATE ESAMAIL
			SET snd_yn = #{p.snd_yn}
				, snd_dt = #{g.now} 
		WHERE mail_id = #{p.mail_id}
	</update>
	
	<resultMap type="map" id="resultMap-findESAMailById">
        <result property="tmp_cont" column="TMP_CONT" jdbcType="CLOB" javaType="string" />
    </resultMap>
	<select id="findESAMailById" resultMap="resultMap-findESAMailById">
		/* mail.findESAMailById : 메일 목록 상세 조회*/
		SELECT A.SYS_ID
			, A.MAIL_ID
			, A.MAIL_SET_ID
			, A.MAIL_TIT
			, A.FROM_ADDR
			, A.FROM_NM
			, A.TO_ADDR
			, A.TO_NM
			, A.SND_DT
			, A.SND_YN
			, A.REG_ID
			, A.REG_DT
			, B.SND_CLS	
			
		FROM ESAMAIL A
	   INNER JOIN ESACFML B
            ON A.MAIL_SET_ID = B.MAIL_SET_ID
		
		WHERE A.MAIL_ID = #{p.mail_id}
	</select>
	
</mapper>