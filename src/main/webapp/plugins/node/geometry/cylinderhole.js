/**
 * Sphere geometry node type
 *
 * @author Moritz Kornher / https://github.com/mrgrain
 *
 * <p>Usage example:</p>
 *
 * <pre>
 * someNode.addNode({
 *      type: "geometry/cylinder",
 *      radiusTop: 20, // Default
 *      radiusBottom: 20, // Default
 *      height: 100, // Default
 *      radialSegments: 8, // Default
 *      heightSegments: 1, // Default
 *      openEnded: false // Default
 *  });
 *  </pre>
 */

(function () {

    SceneJS.Types.addType("geometry/cylinderhole", {

        init:function (params) {
            this.addNode(build.call(this, params));
        }
    });

    function build(params) {

        // Thanks awfully to: http://www.e-reading-lib.com/bookreader.php/143437/Pike_-_DirectX_8_Programming_Tutorial.html

        /* config */
        console.log("params.radiusTopMax : "+params.radiusTopMax);
        console.log("params.radiusTopMin : "+params.radiusTopMin);
        var radiusTopMax = params.radiusTopMax !== undefined ? params.radiusTopMax : 1;
        var radiusTopMin = params.radiusTopMin !== undefined ? params.radiusTopMin : 1;
        var radiusBottomMax = params.radiusBottomMax !== undefined ? params.radiusBottomMax : 1;
        var radiusBottomMin = params.radiusBottomMin !== undefined ? params.radiusBottomMin : 1;
        var radiusTop = 1;
        var radiusBottom=1;


        var height = params.height !== undefined ? params.height : 1;

        var radialSegments   = params.radialSegments  || 60;
        var heightSegments   = params.heightSegments  || 1;

        var openEnded = params.openEnded || false;
        /* config end */

        var heightHalf = height / 2;
        var heightLength = height / heightSegments;

        var radialAngle = (2.0 * Math.PI / radialSegments);
        var radialLength = 1.0 / radialSegments;

        var nextRadius = this.radiusBottom;
        var radiusChange = (radiusTop-radiusBottom)/heightSegments;

        var positions = [];
        var normals = [];
        var uvs = [];
        var indices = [];

        // create vertices
        // create vertices
        var normalY = (90.0 - (Math.atan(height / (radiusBottomMax - radiusTopMax))) * 180/Math.PI) / 90.0;


        var vertexNumber = 0;
        
        //바깥쪽 점
        for (var h = 0; h <= heightSegments; h++) {
            var currentRadius = radiusTopMax - h*radiusChange;
            var currentHeight = heightHalf - h*heightLength
 
            for (var i=0; i <= radialSegments; i++) {
                var x = Math.sin(i * radialAngle);
                var z = Math.cos(i * radialAngle);

                normals.push(currentRadius * x);
                normals.push(normalY); //todo
                normals.push(currentRadius * z);
                uvs.push(1 - (i*radialLength));
                uvs.push(0 + h*1/heightSegments);
                positions.push(currentRadius * x);
                positions.push(currentHeight);
                positions.push(currentRadius * z);
                vertexNumber++;
            }
        }
        //바깥쪽 면
        // create faces
        for (var h = 0; h < heightSegments; h++) {
            for (var i=0; i <= radialSegments; i++) {
                var first = h * (radialSegments + 1) + i;
                var second = first + radialSegments;
                indices.push(first);
                indices.push(second);
                indices.push(second + 1);
                
                indices.push(first);
                indices.push(second + 1);
                indices.push(first + 1);
            }
        }
        var startIndex1 = vertexNumber;
        //안쪽 점
        for (var h = 0; h <= heightSegments; h++) {
            var currentRadius = radiusTopMin - h*radiusChange;
            var currentHeight = heightHalf - h*heightLength
 
            for (var i=0; i <= radialSegments; i++) {
                var x = Math.sin(i * radialAngle);
                var z = Math.cos(i * radialAngle);

                normals.push(currentRadius * x);
                normals.push(normalY); //todo
                normals.push(currentRadius * z);
                uvs.push(0 + (i*radialLength));
                uvs.push(0 + h*1/heightSegments);
                positions.push(currentRadius * x);
                positions.push(currentHeight);
                positions.push(currentRadius * z);
                vertexNumber++;
            }
        }


        //안쪽 점
        
        // create faces
        for (var h = 0; h < heightSegments; h++) {
            for (var i=0; i <= radialSegments; i++) {
                var first = startIndex1 +  h * (radialSegments + 1) + i;
                var second = first + radialSegments;
                indices.push(first);
                indices.push(second);
                indices.push(second + 1);

                indices.push(first);
                indices.push(second + 1);
                indices.push(first + 1);
            }
        }

        var startIndex2 = vertexNumber;

        
        // create top cap
        if (!openEnded && radiusTopMax > 0) {// center 점은 startIndex*2 번째 점임.
            
            // 위쪽면
            var normalY = (90.0 - (Math.atan(height / (radiusBottomMin - radiusTopMin))) * 180/Math.PI) / 90.0; 
            var currentRadiusMin = radiusTopMin;
            var currentRadiusMax = radiusTopMax;
            var currentHeight = heightHalf

            for (var i=0; i <= radialSegments; i++) {
                var x = Math.sin(i * radialAngle);
                var z = Math.cos(i * radialAngle);

                normals.push(currentRadiusMin * x);
                normals.push(normalY); //todo
                normals.push(currentRadiusMin * z);

                normals.push(currentRadiusMax * x);
                normals.push(normalY); //todo
                normals.push(currentRadiusMax * z);

                var tu = (0.5 * Math.sin(i * radialAngle)) + 0.5;
                var tv = (0.5 * Math.cos(i * radialAngle)) + 0.5;
                uvs.push(tu);
                uvs.push(tv);        
                uvs.push(tu);
                uvs.push(tv);        

                positions.push(currentRadiusMin * x);
                positions.push(currentHeight);
                positions.push(currentRadiusMin * z);

                positions.push(currentRadiusMax * x);
                positions.push(currentHeight);
                positions.push(currentRadiusMax * z);
                vertexNumber++;
                vertexNumber++;
            }
            var startIndex3 = vertexNumber;
            // 아래쪽 면
            var normalY = (90.0 - (Math.atan(height / (radiusBottomMin - radiusTopMin))) * 180/Math.PI) / 90.0; 
            var currentRadiusMin = radiusTopMin;
            var currentRadiusMax = radiusTopMax;
            var currentHeight = -heightHalf

            for (var i=0; i <= radialSegments; i++) {
                var x = Math.sin(i * radialAngle);
                var z = Math.cos(i * radialAngle);

                normals.push(currentRadiusMin * x);
                normals.push(-normalY); //todo
                normals.push(currentRadiusMin * z);

                normals.push(currentRadiusMax * x);
                normals.push(-normalY); //todo
                normals.push(currentRadiusMax * z);

                var tu = (0.5 * Math.sin(i * radialAngle)) + 0.5;
                var tv = (0.5 * Math.cos(i * radialAngle)) + 0.5;
                uvs.push(tu);
                uvs.push(tv);        
                uvs.push(tu);
                uvs.push(tv);        

                positions.push(currentRadiusMin * x);
                positions.push(currentHeight);
                positions.push(currentRadiusMin * z);

                positions.push(currentRadiusMax * x);
                positions.push(currentHeight);
                positions.push(currentRadiusMax * z);
                vertexNumber++;
                vertexNumber++;
            }
        }
            
        

        for (var i=0; i < radialSegments*2; i++) {
            var vertex1 = startIndex2 +i;
            var vertex2 = startIndex2 + 1 +i;
            var vertex3 = startIndex2 + 2 +i;
            indices.push(vertex1);
            indices.push(vertex2);
            indices.push(vertex3);
        }
        for (var i=0; i < radialSegments*2; i++) {
            var vertex1 = startIndex3 +i;
            var vertex2 = startIndex3 + 1 +i;
            var vertex3 = startIndex3 + 2 +i;
            indices.push(vertex1);
            indices.push(vertex2);
            indices.push(vertex3);
        }
        
 







        //  // create bottom cap
        // if (!openEnded && radiusBottomMax > 0) {
        //     var startIndex = (positions.length/3);
 
        //     // top center
        //     normals.push(0.0);
        //     normals.push(-1.0);
        //     normals.push(0.0);
        //     uvs.push(0.5);
        //     uvs.push(0.5);
        //     positions.push(0);
        //     positions.push(0-heightHalf);
        //     positions.push(0);
 
        //      // top triangle fan
        //     for (var i=0; i <= radialSegments; i++) {
        //         var x = Math.sin(i * radialAngle);
        //         var z = Math.cos(i * radialAngle);
        //         var tu = (0.5 * Math.sin(i * radialAngle)) + 0.5;
        //         var tv = (0.5 * Math.cos(i * radialAngle)) + 0.5;
        //          normals.push(radiusBottomMax * x);
        //         normals.push(-1.0);
        //         normals.push(radiusBottomMax * z);
        //         uvs.push(tu);
        //         uvs.push(tv);
        //         positions.push(radiusBottomMax * x);
        //         positions.push(0-heightHalf);
        //         positions.push(radiusBottomMax * z);
        //     }
 
        //     for (var i=0; i < radialSegments; i++) {
        //         var center = startIndex;
        //         var first = startIndex + 1 + i;
        //         indices.push(first);
        //         indices.push(first + 1);
        //         indices.push(center);
        //     }
        // }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////












      





        return {
            type: "geometry",
            primitive:params.wire ? "lines" : "triangles",
            coreId : "cylinderhole_" + (params.wire ? "wire" : "solid") + "_" + (params.openEnded ? "open" : "closed") + "_"
            + radiusTop + "_" + radiusBottom + "_" + radialSegments + "_"
            + height + "_" + heightSegments,
            positions : new Float32Array(positions),
            normals: new Float32Array(normals),
            uv : new Float32Array(uvs),
            indices : indices
        };
    }
})();
